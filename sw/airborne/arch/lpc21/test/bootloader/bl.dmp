
bl.elf:     file format elf32-littlearm
bl.elf
architecture: arm, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00000000

Program Header:
    LOAD off    0x00000074 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x0000180c memsz 0x0000180c flags r-x
    LOAD off    0x00001880 vaddr 0x40006000 paddr 0x0000180c align 2**2
         filesz 0x00000000 memsz 0x0000014c flags rw-
private flags = 5000000: [Version5 EABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000171e  00000000  00000000  00000074  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text.startup 000000ec  00001720  00001720  00001794  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000014c  40006000  0000180c  00001880  2**2
                  ALLOC
  3 .ARM.attributes 0000002e  00000000  00000000  00001880  2**0
                  CONTENTS, READONLY
  4 .comment      0000003c  00000000  00000000  000018ae  2**0
                  CONTENTS, READONLY
  5 .debug_info   00001b1e  00000000  00000000  000018ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b95  00000000  00000000  00003408  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000188  00000000  00000000  00003fa0  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000110  00000000  00000000  00004128  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000a0c  00000000  00000000  00004238  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000080f  00000000  00000000  00004c44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000004fc  00000000  00000000  00005454  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000012c1  00000000  00000000  00005950  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00001720 l    d  .text.startup	00000000 .text.startup
40006000 l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00004000 l       *ABS*	00000000 APP_START
e0028000 l       *ABS*	00000000 IOPIN0
e0028010 l       *ABS*	00000000 IOPIN1
e002c014 l       *ABS*	00000000 PINSEL2
00800000 l       *ABS*	00000000 BOOT_PIN
00000040 l       *ABS*	00000000 UND_STACK_SIZE
00000040 l       *ABS*	00000000 ABT_STACK_SIZE
00000040 l       *ABS*	00000000 FIQ_STACK_SIZE
00000040 l       *ABS*	00000000 IRQ_STACK_SIZE
00000400 l       *ABS*	00000000 SVC_STACK_SIZE
00000010 l       *ABS*	00000000 MODE_USR
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000080 l       *ABS*	00000000 I_BIT
00000040 l       *ABS*	00000000 F_BIT
00000000 l       .text	00000000 _vectors
00000020 l       .text	00000000 Reset_Addr
00000024 l       .text	00000000 Undef_Addr
00000028 l       .text	00000000 SWI_Addr
0000002c l       .text	00000000 PAbt_Addr
00000030 l       .text	00000000 DAbt_Addr
0000003c l       .text	00000000 FIQ_Addr
00000034 l       .text	00000000 Resvd_Addr
00000038 l       .text	00000000 IRQ_Addr
00000040 l       .text	00000000 AppS_Addr
00000060 l       .text	00000000 Bootloader
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 printf.c
0000017c l     F .text	00000034 printchar
000001b0 l     F .text	000000d8 prints
00000288 l     F .text	00000124 printi
000003ac l     F .text	000001e8 print
00000000 l    df *ABS*	00000000 console.c
00000000 l    df *ABS*	00000000 bootloader.c
0000098c l     F .text	0000005c PreHandleRequest
000009e8 l     F .text	0000012c HandleVendorRequest
000016a0 l     O .text	00000077 abDescriptors
40006000 l     O .bss	00000014 cmd
40006014 l     O .bss	00000001 unlocked
40006015 l     O .bss	00000001 bEcho
40006018 l     O .bss	00000004 write_ram_adr
4000601c l     O .bss	00000004 write_ram_len
40006020 l     O .bss	00000004 read_mem_adr
40006024 l     O .bss	00000004 read_mem_len
40006028 l     O .bss	00000004 start_app
4000602c l     O .bss	00000004 start_adr
40006030 l     O .bss	00000020 rescmd
00000000 l    df *ABS*	00000000 usbhw_lpc.c
00000b14 l     F .text	00000024 Wait4DevInt
00000b38 l     F .text	00000024 USBHwCmd
00000b5c l     F .text	0000002c USBHwCmdWrite
00000b88 l     F .text	00000028 USBHwEPRealize
40006050 l     O .bss	00000040 _apfnEPIntHandlers
40006090 l     O .bss	00000004 _pfnDevIntHandler
40006094 l     O .bss	00000004 _pfnFrameHandler
00000000 l    df *ABS*	00000000 usbcontrol.c
00001058 l     F .text	00000048 DataIn
40006098 l     O .bss	00000004 iResidue
4000609c l     O .bss	00000004 pbData
400060a0 l     O .bss	00000008 Setup
400060a8 l     O .bss	00000004 iLen
400060ac l     O .bss	00000080 abControlData
4000612c l     O .bss	00000004 apfnPreReqHandler
40006130 l     O .bss	00000010 apfnReqHandlers
00000000 l    df *ABS*	00000000 usbinit.c
0000127c l     F .text	00000014 HandleUsbReset
00000000 l    df *ABS*	00000000 usbdescrip.c
40006140 l     O .bss	00000004 pabDescrip
00000000 l    df *ABS*	00000000 usbstdreq.c
40006144 l     O .bss	00000004 pfnGetDescriptor
40006148 l     O .bss	00000001 bConfiguration
00001568 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 memcpy.c
00000634 g     F .text	00000040 putchar
00000d34 g     F .text	000000a8 USBHwEPRead
00000594 g     F .text	00000028 printf
000012f4 g     F .text	00000010 USBRegisterDescriptors
000005ec g     F .text	00000048 ConsoleInit
00000c54 g     F .text	0000004c USBHwGetEPStall
00000108 g     F .text	00000004 UNDEF_Routine
00000e34 g     F .text	00000128 USBHwISR
0000171e g       .text	00000000 _etext
00001680 g     F .text	00000020 memcpy
00000694 g     F .text	00000030 puts
00001568 g     F .text	000000f4 __udivsi3
40006000 g       .bss	00000000 _bss_start
00000cbc g     F .text	00000078 USBHwEPWrite
00001054 g     F .text	00000004 USBHwReset
00000104 g     F .text	00000004 SWI_Routine
000006c4 g     F .text	00000260 isp_entry
00000000 g       .text	00000000 _startup
00001304 g     F .text	00000074 USBHandleDescriptor
4000614c g       *ABS*	00000000 _bss_end
00000044 g       .text	00000000 Reset_Handler
000010a0 g     F .text	000001b8 USBHandleControlTransfer
00000c38 g     F .text	0000000c USBHwSetAddress
00000100 g     F .text	00000004 FIQ_Routine
00001258 g     F .text	00000010 USBRegisterPreRequestHandler
00001268 g     F .text	00000014 USBRegisterRequestHandler
00001290 g     F .text	00000064 USBInit
00000c44 g     F .text	00000010 USBHwConnect
0000167c  w    F .text	00000004 __aeabi_ldiv0
00000ca0 g     F .text	0000001c USBHwEPStall
00001720 g     F .text.startup	000000ec main
00001568 g     F .text	00000000 __aeabi_uidiv
00000674 g     F .text	00000020 getchar
40007edc g       *ABS*	00000000 _stack_end
00000bf0 g     F .text	00000024 USBHwRegisterDevIntHandler
00000bb0 g     F .text	00000040 USBHwRegisterEPIntHandler
000005bc g     F .text	00000030 sprintf
000000fc g     F .text	00000004 IRQ_Routine
00001378 g     F .text	000001e0 USBHandleStandardRequest
40006000 g       .text.startup	00000000 _data
00000ddc g     F .text	00000058 USBHwConfigDevice
0000165c g     F .text	00000020 __aeabi_uidivmod
40006000 g       .text.startup	00000000 _edata
4000614c g       *ABS*	00000000 _end
00000f5c g     F .text	000000f8 USBHwInit
00000c14 g     F .text	00000024 USBHwRegisterFrameHandler
0000167c  w    F .text	00000004 __aeabi_idiv0
0000010c g     F .text	00000070 Initialize
00001558 g     F .text	00000010 USBRegisterDescriptorHandler
00000924 g     F .text	00000068 btl_entry


