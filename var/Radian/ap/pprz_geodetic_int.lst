   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"pprz_geodetic_int.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.enu_of_ecef_point_i,"ax",%progbits
  18              		.align	1
  19              		.global	enu_of_ecef_point_i
  20              		.thumb
  21              		.thumb_func
  23              	enu_of_ecef_point_i:
  24              	.LFB2:
  25              		.file 1 "math/pprz_geodetic_int.c"
   1:math/pprz_geodetic_int.c **** /*
   2:math/pprz_geodetic_int.c ****  * $Id$
   3:math/pprz_geodetic_int.c ****  *
   4:math/pprz_geodetic_int.c ****  * Copyright (C) 2008-2009 Antoine Drouin <poinix@gmail.com>
   5:math/pprz_geodetic_int.c ****  *
   6:math/pprz_geodetic_int.c ****  * This file is part of paparazzi.
   7:math/pprz_geodetic_int.c ****  *
   8:math/pprz_geodetic_int.c ****  * paparazzi is free software; you can redistribute it and/or modify
   9:math/pprz_geodetic_int.c ****  * it under the terms of the GNU General Public License as published by
  10:math/pprz_geodetic_int.c ****  * the Free Software Foundation; either version 2, or (at your option)
  11:math/pprz_geodetic_int.c ****  * any later version.
  12:math/pprz_geodetic_int.c ****  *
  13:math/pprz_geodetic_int.c ****  * paparazzi is distributed in the hope that it will be useful,
  14:math/pprz_geodetic_int.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:math/pprz_geodetic_int.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:math/pprz_geodetic_int.c ****  * GNU General Public License for more details.
  17:math/pprz_geodetic_int.c ****  *
  18:math/pprz_geodetic_int.c ****  * You should have received a copy of the GNU General Public License
  19:math/pprz_geodetic_int.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  20:math/pprz_geodetic_int.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  21:math/pprz_geodetic_int.c ****  * Boston, MA 02111-1307, USA.
  22:math/pprz_geodetic_int.c ****  */
  23:math/pprz_geodetic_int.c **** 
  24:math/pprz_geodetic_int.c **** #include "pprz_geodetic_int.h"
  25:math/pprz_geodetic_int.c **** #include "pprz_algebra_int.h"
  26:math/pprz_geodetic_int.c **** 
  27:math/pprz_geodetic_int.c **** #define HIGH_RES_TRIG_FRAC  20
  28:math/pprz_geodetic_int.c **** 
  29:math/pprz_geodetic_int.c **** void ltp_def_from_ecef_i(struct LtpDef_i* def, struct EcefCoor_i* ecef) {
  30:math/pprz_geodetic_int.c **** 
  31:math/pprz_geodetic_int.c ****   /* store the origin of the tangeant plane */
  32:math/pprz_geodetic_int.c ****   VECT3_COPY(def->ecef, *ecef);
  33:math/pprz_geodetic_int.c ****   /* compute the lla representation of the origin */
  34:math/pprz_geodetic_int.c ****   lla_of_ecef_i(&def->lla, &def->ecef);
  35:math/pprz_geodetic_int.c ****   /* store the rotation matrix                    */
  36:math/pprz_geodetic_int.c **** 
  37:math/pprz_geodetic_int.c **** #if 1
  38:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  39:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  40:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  41:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  42:math/pprz_geodetic_int.c **** #else
  43:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sin(RAD_OF_EM7RAD((double)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  44:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cos(RAD_OF_EM7RAD((double)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  45:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sin(RAD_OF_EM7RAD((double)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  46:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cos(RAD_OF_EM7RAD((double)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  47:math/pprz_geodetic_int.c **** #endif
  48:math/pprz_geodetic_int.c **** 
  49:math/pprz_geodetic_int.c **** 
  50:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  51:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  52:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[2] =  0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_
  53:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
  54:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
  55:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  56:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
  57:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
  58:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  59:math/pprz_geodetic_int.c **** 
  60:math/pprz_geodetic_int.c **** }
  61:math/pprz_geodetic_int.c **** 
  62:math/pprz_geodetic_int.c **** void ltp_def_from_lla_i(struct LtpDef_i* def, struct LlaCoor_i* lla) {
  63:math/pprz_geodetic_int.c **** 
  64:math/pprz_geodetic_int.c ****   /* store the origin of the tangeant plane */
  65:math/pprz_geodetic_int.c ****   LLA_COPY(def->lla, *lla);
  66:math/pprz_geodetic_int.c ****   /* compute the ecef representation of the origin */
  67:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&def->ecef, &def->lla);
  68:math/pprz_geodetic_int.c ****   /* store the rotation matrix                    */
  69:math/pprz_geodetic_int.c **** 
  70:math/pprz_geodetic_int.c **** #if 1
  71:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  72:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  73:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  74:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  75:math/pprz_geodetic_int.c **** #else
  76:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sin(RAD_OF_EM7RAD((double)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  77:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cos(RAD_OF_EM7RAD((double)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  78:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sin(RAD_OF_EM7RAD((double)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  79:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cos(RAD_OF_EM7RAD((double)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  80:math/pprz_geodetic_int.c **** #endif
  81:math/pprz_geodetic_int.c **** 
  82:math/pprz_geodetic_int.c **** 
  83:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  84:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  85:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[2] =  0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_
  86:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
  87:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
  88:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  89:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
  90:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
  91:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  92:math/pprz_geodetic_int.c **** 
  93:math/pprz_geodetic_int.c **** }
  94:math/pprz_geodetic_int.c **** 
  95:math/pprz_geodetic_int.c **** void enu_of_ecef_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  96:math/pprz_geodetic_int.c **** 
  97:math/pprz_geodetic_int.c ****   struct EcefCoor_i delta;
  98:math/pprz_geodetic_int.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  31              		.loc 1 98 0
  32 0000 0B68     		ldr	r3, [r1, #0]
  95:math/pprz_geodetic_int.c **** void enu_of_ecef_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
  33              		.loc 1 95 0
  34 0002 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 14, -4
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 4, -20
  95:math/pprz_geodetic_int.c **** void enu_of_ecef_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
  42              		.loc 1 95 0
  43 0004 0446     		mov	r4, r0
  44              		.loc 1 98 0
  45 0006 1068     		ldr	r0, [r2, #0]
  46              	.LVL1:
  47 0008 5568     		ldr	r5, [r2, #4]
  48 000a C01A     		subs	r0, r0, r3
  49              	.LVL2:
  50 000c 4B68     		ldr	r3, [r1, #4]
  51 000e 9668     		ldr	r6, [r2, #8]
  52 0010 ED1A     		subs	r5, r5, r3
  53              	.LVL3:
  99:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*delta.x +
 100:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[1]*delta.y +
  54              		.loc 1 100 0
  55 0012 CA69     		ldr	r2, [r1, #28]
  56              	.LVL4:
  98:math/pprz_geodetic_int.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  57              		.loc 1 98 0
  58 0014 8B68     		ldr	r3, [r1, #8]
  99:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*delta.x +
  59              		.loc 1 99 0
  60 0016 8F69     		ldr	r7, [r1, #24]
  98:math/pprz_geodetic_int.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  61              		.loc 1 98 0
  62 0018 F61A     		subs	r6, r6, r3
  63              	.LVL5:
  64              		.loc 1 100 0
  65 001a 82FB0523 		smull	r2, r3, r2, r5
  99:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*delta.x +
  66              		.loc 1 99 0
  67 001e C0FB0723 		smlal	r2, r3, r0, r7
 101:math/pprz_geodetic_int.c ****                        0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_syst
 102:math/pprz_geodetic_int.c ****   enu->x = (int32_t)(tmpx>>HIGH_RES_TRIG_FRAC);
  68              		.loc 1 102 0
  69 0022 120D     		lsrs	r2, r2, #20
  70 0024 42EA0332 		orr	r2, r2, r3, lsl #12
  71 0028 2260     		str	r2, [r4, #0]
 103:math/pprz_geodetic_int.c ****   const int64_t tmpy = (int64_t)def->ltp_of_ecef.m[3]*delta.x +
 104:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[4]*delta.y +
  72              		.loc 1 104 0
  73 002a 8A6A     		ldr	r2, [r1, #40]
 103:math/pprz_geodetic_int.c ****   const int64_t tmpy = (int64_t)def->ltp_of_ecef.m[3]*delta.x +
  74              		.loc 1 103 0
  75 002c D1F824C0 		ldr	ip, [r1, #36]
  76              		.loc 1 104 0
  77 0030 82FB0523 		smull	r2, r3, r2, r5
 103:math/pprz_geodetic_int.c ****   const int64_t tmpy = (int64_t)def->ltp_of_ecef.m[3]*delta.x +
  78              		.loc 1 103 0
  79 0034 C0FB0C23 		smlal	r2, r3, r0, ip
 105:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[5]*delta.z;
  80              		.loc 1 105 0
  81 0038 CF6A     		ldr	r7, [r1, #44]
 103:math/pprz_geodetic_int.c ****   const int64_t tmpy = (int64_t)def->ltp_of_ecef.m[3]*delta.x +
  82              		.loc 1 103 0
  83 003a C6FB0723 		smlal	r2, r3, r6, r7
 106:math/pprz_geodetic_int.c ****   enu->y = (int32_t)(tmpy>>HIGH_RES_TRIG_FRAC);
  84              		.loc 1 106 0
  85 003e 120D     		lsrs	r2, r2, #20
  86 0040 42EA0332 		orr	r2, r2, r3, lsl #12
  87 0044 6260     		str	r2, [r4, #4]
 107:math/pprz_geodetic_int.c ****   const int64_t tmpz = (int64_t)def->ltp_of_ecef.m[6]*delta.x +
 108:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[7]*delta.y +
  88              		.loc 1 108 0
  89 0046 4A6B     		ldr	r2, [r1, #52]
 107:math/pprz_geodetic_int.c ****   const int64_t tmpz = (int64_t)def->ltp_of_ecef.m[6]*delta.x +
  90              		.loc 1 107 0
  91 0048 0F6B     		ldr	r7, [r1, #48]
  92              		.loc 1 108 0
  93 004a 82FB0523 		smull	r2, r3, r2, r5
 107:math/pprz_geodetic_int.c ****   const int64_t tmpz = (int64_t)def->ltp_of_ecef.m[6]*delta.x +
  94              		.loc 1 107 0
  95 004e C0FB0723 		smlal	r2, r3, r0, r7
 109:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[8]*delta.z;
  96              		.loc 1 109 0
  97 0052 896B     		ldr	r1, [r1, #56]
  98              	.LVL6:
 107:math/pprz_geodetic_int.c ****   const int64_t tmpz = (int64_t)def->ltp_of_ecef.m[6]*delta.x +
  99              		.loc 1 107 0
 100 0054 C6FB0123 		smlal	r2, r3, r6, r1
 110:math/pprz_geodetic_int.c ****   enu->z = (int32_t)(tmpz>>HIGH_RES_TRIG_FRAC);
 101              		.loc 1 110 0
 102 0058 120D     		lsrs	r2, r2, #20
 103 005a 42EA0332 		orr	r2, r2, r3, lsl #12
 104 005e A260     		str	r2, [r4, #8]
 111:math/pprz_geodetic_int.c **** 
 112:math/pprz_geodetic_int.c **** }
 105              		.loc 1 112 0
 106 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 107              		.cfi_endproc
 108              	.LFE2:
 110              		.section	.text.ned_of_ecef_point_i,"ax",%progbits
 111              		.align	1
 112              		.global	ned_of_ecef_point_i
 113              		.thumb
 114              		.thumb_func
 116              	ned_of_ecef_point_i:
 117              	.LFB3:
 113:math/pprz_geodetic_int.c **** 
 114:math/pprz_geodetic_int.c **** 
 115:math/pprz_geodetic_int.c **** void ned_of_ecef_point_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 118              		.loc 1 115 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 16
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL7:
 123 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 124              	.LCFI1:
 125              		.cfi_def_cfa_offset 24
 126              		.cfi_offset 14, -4
 127              		.cfi_offset 4, -8
 128              		.cfi_offset 3, -12
 129              		.cfi_offset 2, -16
 130              		.cfi_offset 1, -20
 131              		.cfi_offset 0, -24
 132              		.loc 1 115 0
 133 0002 0446     		mov	r4, r0
 116:math/pprz_geodetic_int.c **** 
 117:math/pprz_geodetic_int.c ****   struct EnuCoor_i enu;
 118:math/pprz_geodetic_int.c ****   enu_of_ecef_point_i(&enu, def, ecef);
 134              		.loc 1 118 0
 135 0004 01A8     		add	r0, sp, #4
 136              	.LVL8:
 137 0006 FFF7FEFF 		bl	enu_of_ecef_point_i
 138              	.LVL9:
 119:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(*ned, enu);
 139              		.loc 1 119 0
 140 000a 029B     		ldr	r3, [sp, #8]
 141 000c 2360     		str	r3, [r4, #0]
 142 000e 019B     		ldr	r3, [sp, #4]
 143 0010 6360     		str	r3, [r4, #4]
 144 0012 039B     		ldr	r3, [sp, #12]
 145 0014 5B42     		negs	r3, r3
 146 0016 A360     		str	r3, [r4, #8]
 120:math/pprz_geodetic_int.c **** 
 121:math/pprz_geodetic_int.c **** }
 147              		.loc 1 121 0
 148 0018 1FBD     		pop	{r0, r1, r2, r3, r4, pc}
 149              		.cfi_endproc
 150              	.LFE3:
 152              		.section	.text.enu_of_ecef_vect_i,"ax",%progbits
 153              		.align	1
 154              		.global	enu_of_ecef_vect_i
 155              		.thumb
 156              		.thumb_func
 158              	enu_of_ecef_vect_i:
 159              	.LFB4:
 122:math/pprz_geodetic_int.c **** 
 123:math/pprz_geodetic_int.c **** void enu_of_ecef_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 160              		.loc 1 123 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              	.LVL10:
 165 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 20
 168              		.cfi_offset 14, -4
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 6, -12
 171              		.cfi_offset 5, -16
 172              		.cfi_offset 4, -20
 124:math/pprz_geodetic_int.c **** 
 125:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*ecef->x +
 126:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[1]*ecef->y +
 173              		.loc 1 126 0
 174 0002 5768     		ldr	r7, [r2, #4]
 123:math/pprz_geodetic_int.c **** void enu_of_ecef_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 175              		.loc 1 123 0
 176 0004 0646     		mov	r6, r0
 177              		.loc 1 126 0
 178 0006 C869     		ldr	r0, [r1, #28]
 179              	.LVL11:
 123:math/pprz_geodetic_int.c **** void enu_of_ecef_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 180              		.loc 1 123 0
 181 0008 0C46     		mov	r4, r1
 125:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*ecef->x +
 182              		.loc 1 125 0
 183 000a 8B69     		ldr	r3, [r1, #24]
 184              		.loc 1 126 0
 185 000c 80FB0701 		smull	r0, r1, r0, r7
 125:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*ecef->x +
 186              		.loc 1 125 0
 187 0010 1568     		ldr	r5, [r2, #0]
 127:math/pprz_geodetic_int.c ****                        0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_syst
 128:math/pprz_geodetic_int.c ****   enu->x = (int32_t)(tmpx>>HIGH_RES_TRIG_FRAC);
 129:math/pprz_geodetic_int.c ****   const int64_t tmpy = (int64_t)def->ltp_of_ecef.m[3]*ecef->x +
 188              		.loc 1 129 0
 189 0012 D4F824C0 		ldr	ip, [r4, #36]
 125:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*ecef->x +
 190              		.loc 1 125 0
 191 0016 C5FB0301 		smlal	r0, r1, r5, r3
 128:math/pprz_geodetic_int.c ****   enu->x = (int32_t)(tmpx>>HIGH_RES_TRIG_FRAC);
 192              		.loc 1 128 0
 193 001a 030D     		lsrs	r3, r0, #20
 194 001c 43EA0133 		orr	r3, r3, r1, lsl #12
 195 0020 3360     		str	r3, [r6, #0]
 130:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[4]*ecef->y +
 196              		.loc 1 130 0
 197 0022 A36A     		ldr	r3, [r4, #40]
 131:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[5]*ecef->z;
 198              		.loc 1 131 0
 199 0024 9168     		ldr	r1, [r2, #8]
 200              	.LVL12:
 130:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[4]*ecef->y +
 201              		.loc 1 130 0
 202 0026 83FB0723 		smull	r2, r3, r3, r7
 203              	.LVL13:
 129:math/pprz_geodetic_int.c ****   const int64_t tmpy = (int64_t)def->ltp_of_ecef.m[3]*ecef->x +
 204              		.loc 1 129 0
 205 002a C5FB0C23 		smlal	r2, r3, r5, ip
 206              		.loc 1 131 0
 207 002e E06A     		ldr	r0, [r4, #44]
 132:math/pprz_geodetic_int.c ****   enu->y = (int32_t)(tmpy>>HIGH_RES_TRIG_FRAC);
 133:math/pprz_geodetic_int.c ****   const int64_t tmpz = (int64_t)def->ltp_of_ecef.m[6]*ecef->x +
 208              		.loc 1 133 0
 209 0030 D4F830C0 		ldr	ip, [r4, #48]
 129:math/pprz_geodetic_int.c ****   const int64_t tmpy = (int64_t)def->ltp_of_ecef.m[3]*ecef->x +
 210              		.loc 1 129 0
 211 0034 C1FB0023 		smlal	r2, r3, r1, r0
 132:math/pprz_geodetic_int.c ****   enu->y = (int32_t)(tmpy>>HIGH_RES_TRIG_FRAC);
 212              		.loc 1 132 0
 213 0038 120D     		lsrs	r2, r2, #20
 214 003a 42EA0332 		orr	r2, r2, r3, lsl #12
 215 003e 7260     		str	r2, [r6, #4]
 134:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[7]*ecef->y +
 216              		.loc 1 134 0
 217 0040 626B     		ldr	r2, [r4, #52]
 135:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[8]*ecef->z;
 218              		.loc 1 135 0
 219 0042 A06B     		ldr	r0, [r4, #56]
 220              	.LVL14:
 134:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[7]*ecef->y +
 221              		.loc 1 134 0
 222 0044 82FB0723 		smull	r2, r3, r2, r7
 133:math/pprz_geodetic_int.c ****   const int64_t tmpz = (int64_t)def->ltp_of_ecef.m[6]*ecef->x +
 223              		.loc 1 133 0
 224 0048 C5FB0C23 		smlal	r2, r3, r5, ip
 225 004c C1FB0023 		smlal	r2, r3, r1, r0
 136:math/pprz_geodetic_int.c ****   enu->z = (int32_t)(tmpz>>HIGH_RES_TRIG_FRAC);
 226              		.loc 1 136 0
 227 0050 120D     		lsrs	r2, r2, #20
 228 0052 42EA0332 		orr	r2, r2, r3, lsl #12
 229 0056 B260     		str	r2, [r6, #8]
 137:math/pprz_geodetic_int.c **** 
 138:math/pprz_geodetic_int.c **** }
 230              		.loc 1 138 0
 231 0058 F0BD     		pop	{r4, r5, r6, r7, pc}
 232              		.cfi_endproc
 233              	.LFE4:
 235              		.section	.text.ned_of_ecef_vect_i,"ax",%progbits
 236              		.align	1
 237              		.global	ned_of_ecef_vect_i
 238              		.thumb
 239              		.thumb_func
 241              	ned_of_ecef_vect_i:
 242              	.LFB5:
 139:math/pprz_geodetic_int.c **** 
 140:math/pprz_geodetic_int.c **** 
 141:math/pprz_geodetic_int.c **** void ned_of_ecef_vect_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 243              		.loc 1 141 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 16
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              	.LVL15:
 248 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 249              	.LCFI3:
 250              		.cfi_def_cfa_offset 24
 251              		.cfi_offset 14, -4
 252              		.cfi_offset 4, -8
 253              		.cfi_offset 3, -12
 254              		.cfi_offset 2, -16
 255              		.cfi_offset 1, -20
 256              		.cfi_offset 0, -24
 257              		.loc 1 141 0
 258 0002 0446     		mov	r4, r0
 142:math/pprz_geodetic_int.c ****   struct EnuCoor_i enu;
 143:math/pprz_geodetic_int.c ****   enu_of_ecef_vect_i(&enu, def, ecef);
 259              		.loc 1 143 0
 260 0004 01A8     		add	r0, sp, #4
 261              	.LVL16:
 262 0006 FFF7FEFF 		bl	enu_of_ecef_vect_i
 263              	.LVL17:
 144:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(*ned, enu);
 264              		.loc 1 144 0
 265 000a 029B     		ldr	r3, [sp, #8]
 266 000c 2360     		str	r3, [r4, #0]
 267 000e 019B     		ldr	r3, [sp, #4]
 268 0010 6360     		str	r3, [r4, #4]
 269 0012 039B     		ldr	r3, [sp, #12]
 270 0014 5B42     		negs	r3, r3
 271 0016 A360     		str	r3, [r4, #8]
 145:math/pprz_geodetic_int.c **** }
 272              		.loc 1 145 0
 273 0018 1FBD     		pop	{r0, r1, r2, r3, r4, pc}
 274              		.cfi_endproc
 275              	.LFE5:
 277              		.section	.text.ecef_of_enu_point_i,"ax",%progbits
 278              		.align	1
 279              		.global	ecef_of_enu_point_i
 280              		.thumb
 281              		.thumb_func
 283              	ecef_of_enu_point_i:
 284              	.LFB6:
 146:math/pprz_geodetic_int.c **** 
 147:math/pprz_geodetic_int.c **** /* check if resolution of INT32_TRIG_FRAC (14) is enough here */
 148:math/pprz_geodetic_int.c **** void ecef_of_enu_point_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct EnuCoor_i* enu) {
 285              		.loc 1 148 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              	.LVL18:
 290 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 20
 293              		.cfi_offset 14, -4
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 6, -12
 296              		.cfi_offset 5, -16
 297              		.cfi_offset 4, -20
 149:math/pprz_geodetic_int.c ****   INT32_RMAT_TRANSP_VMULT(*ecef, def->ltp_of_ecef, *enu);
 298              		.loc 1 149 0
 299 0002 92E83000 		ldmia	r2, {r4, r5}
 300 0006 4E6A     		ldr	r6, [r1, #36]
 301 0008 9368     		ldr	r3, [r2, #8]
 302 000a 6E43     		muls	r6, r5, r6
 303 000c 8A69     		ldr	r2, [r1, #24]
 304              	.LVL19:
 305 000e CF69     		ldr	r7, [r1, #28]
 306 0010 02FB0466 		mla	r6, r2, r4, r6
 307 0014 0A6B     		ldr	r2, [r1, #48]
 308 0016 D1F82CC0 		ldr	ip, [r1, #44]
 309 001a 02FB0366 		mla	r6, r2, r3, r6
 310 001e 8A6A     		ldr	r2, [r1, #40]
 311 0020 B613     		asrs	r6, r6, #14
 312 0022 6A43     		muls	r2, r5, r2
 313 0024 07FB0422 		mla	r2, r7, r4, r2
 314 0028 0CFB05F5 		mul	r5, ip, r5
 315 002c 4F6B     		ldr	r7, [r1, #52]
 316 002e 0660     		str	r6, [r0, #0]
 317 0030 07FB0322 		mla	r2, r7, r3, r2
 318 0034 0F6A     		ldr	r7, [r1, #32]
 319 0036 9213     		asrs	r2, r2, #14
 320 0038 07FB0454 		mla	r4, r7, r4, r5
 321 003c 8D6B     		ldr	r5, [r1, #56]
 322 003e 4260     		str	r2, [r0, #4]
 323 0040 05FB0343 		mla	r3, r5, r3, r4
 150:math/pprz_geodetic_int.c ****   INT32_VECT3_ADD(*ecef, def->ecef);
 324              		.loc 1 150 0
 325 0044 0C68     		ldr	r4, [r1, #0]
 149:math/pprz_geodetic_int.c ****   INT32_RMAT_TRANSP_VMULT(*ecef, def->ltp_of_ecef, *enu);
 326              		.loc 1 149 0
 327 0046 9B13     		asrs	r3, r3, #14
 328              		.loc 1 150 0
 329 0048 3619     		adds	r6, r6, r4
 330 004a 4C68     		ldr	r4, [r1, #4]
 149:math/pprz_geodetic_int.c ****   INT32_RMAT_TRANSP_VMULT(*ecef, def->ltp_of_ecef, *enu);
 331              		.loc 1 149 0
 332 004c 8360     		str	r3, [r0, #8]
 333              		.loc 1 150 0
 334 004e 1219     		adds	r2, r2, r4
 335 0050 4260     		str	r2, [r0, #4]
 336 0052 8A68     		ldr	r2, [r1, #8]
 337 0054 0660     		str	r6, [r0, #0]
 338 0056 9B18     		adds	r3, r3, r2
 339 0058 8360     		str	r3, [r0, #8]
 151:math/pprz_geodetic_int.c **** }
 340              		.loc 1 151 0
 341 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 342              		.cfi_endproc
 343              	.LFE6:
 345              		.section	.text.ecef_of_ned_point_i,"ax",%progbits
 346              		.align	1
 347              		.global	ecef_of_ned_point_i
 348              		.thumb
 349              		.thumb_func
 351              	ecef_of_ned_point_i:
 352              	.LFB7:
 152:math/pprz_geodetic_int.c **** 
 153:math/pprz_geodetic_int.c **** void ecef_of_ned_point_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct NedCoor_i* ned) {
 353              		.loc 1 153 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 16
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              	.LVL20:
 358 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 359              	.LCFI5:
 360              		.cfi_def_cfa_offset 24
 361              		.cfi_offset 14, -4
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 3, -12
 364              		.cfi_offset 2, -16
 365              		.cfi_offset 1, -20
 366              		.cfi_offset 0, -24
 154:math/pprz_geodetic_int.c ****   struct EnuCoor_i enu;
 155:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(enu, *ned);
 367              		.loc 1 155 0
 368 0002 5368     		ldr	r3, [r2, #4]
 369 0004 0193     		str	r3, [sp, #4]
 370 0006 1368     		ldr	r3, [r2, #0]
 371 0008 0293     		str	r3, [sp, #8]
 372 000a 9368     		ldr	r3, [r2, #8]
 156:math/pprz_geodetic_int.c ****   ecef_of_enu_point_i(ecef, def, &enu);
 373              		.loc 1 156 0
 374 000c 01AA     		add	r2, sp, #4
 375              	.LVL21:
 155:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(enu, *ned);
 376              		.loc 1 155 0
 377 000e 5B42     		negs	r3, r3
 378 0010 0393     		str	r3, [sp, #12]
 379              		.loc 1 156 0
 380 0012 FFF7FEFF 		bl	ecef_of_enu_point_i
 381              	.LVL22:
 157:math/pprz_geodetic_int.c **** }
 382              		.loc 1 157 0
 383 0016 05B0     		add	sp, sp, #20
 384 0018 00BD     		pop	{pc}
 385              		.cfi_endproc
 386              	.LFE7:
 388              		.section	.text.ecef_of_enu_vect_i,"ax",%progbits
 389              		.align	1
 390              		.global	ecef_of_enu_vect_i
 391              		.thumb
 392              		.thumb_func
 394              	ecef_of_enu_vect_i:
 395              	.LFB8:
 158:math/pprz_geodetic_int.c **** 
 159:math/pprz_geodetic_int.c **** void ecef_of_enu_vect_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct EnuCoor_i* enu) {
 396              		.loc 1 159 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              	.LVL23:
 160:math/pprz_geodetic_int.c ****   INT32_RMAT_TRANSP_VMULT(*ecef, def->ltp_of_ecef, *enu);
 401              		.loc 1 160 0
 402 0000 9368     		ldr	r3, [r2, #8]
 159:math/pprz_geodetic_int.c **** void ecef_of_enu_vect_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct EnuCoor_i* enu) {
 403              		.loc 1 159 0
 404 0002 70B5     		push	{r4, r5, r6, lr}
 405              	.LCFI6:
 406              		.cfi_def_cfa_offset 16
 407              		.cfi_offset 14, -4
 408              		.cfi_offset 6, -8
 409              		.cfi_offset 5, -12
 410              		.cfi_offset 4, -16
 411              		.loc 1 160 0
 412 0004 92E83000 		ldmia	r2, {r4, r5}
 413 0008 4A6A     		ldr	r2, [r1, #36]
 414              	.LVL24:
 415 000a 8E69     		ldr	r6, [r1, #24]
 416 000c 6A43     		muls	r2, r5, r2
 417 000e 06FB0422 		mla	r2, r6, r4, r2
 418 0012 0E6B     		ldr	r6, [r1, #48]
 419 0014 06FB0322 		mla	r2, r6, r3, r2
 420 0018 9213     		asrs	r2, r2, #14
 421 001a 0260     		str	r2, [r0, #0]
 422 001c 8A6A     		ldr	r2, [r1, #40]
 423 001e CE69     		ldr	r6, [r1, #28]
 424 0020 6A43     		muls	r2, r5, r2
 425 0022 06FB0422 		mla	r2, r6, r4, r2
 426 0026 4E6B     		ldr	r6, [r1, #52]
 427 0028 06FB0322 		mla	r2, r6, r3, r2
 428 002c CE6A     		ldr	r6, [r1, #44]
 429 002e 9213     		asrs	r2, r2, #14
 430 0030 7543     		muls	r5, r6, r5
 431 0032 4260     		str	r2, [r0, #4]
 432 0034 0A6A     		ldr	r2, [r1, #32]
 433 0036 02FB0454 		mla	r4, r2, r4, r5
 434 003a 8D6B     		ldr	r5, [r1, #56]
 435 003c 05FB0343 		mla	r3, r5, r3, r4
 436 0040 9B13     		asrs	r3, r3, #14
 437 0042 8360     		str	r3, [r0, #8]
 161:math/pprz_geodetic_int.c **** }
 438              		.loc 1 161 0
 439 0044 70BD     		pop	{r4, r5, r6, pc}
 440              		.cfi_endproc
 441              	.LFE8:
 443              		.section	.text.ecef_of_ned_vect_i,"ax",%progbits
 444              		.align	1
 445              		.global	ecef_of_ned_vect_i
 446              		.thumb
 447              		.thumb_func
 449              	ecef_of_ned_vect_i:
 450              	.LFB9:
 162:math/pprz_geodetic_int.c **** 
 163:math/pprz_geodetic_int.c **** void ecef_of_ned_vect_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct NedCoor_i* ned) {
 451              		.loc 1 163 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 16
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              	.LVL25:
 456 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 457              	.LCFI7:
 458              		.cfi_def_cfa_offset 24
 459              		.cfi_offset 14, -4
 460              		.cfi_offset 4, -8
 461              		.cfi_offset 3, -12
 462              		.cfi_offset 2, -16
 463              		.cfi_offset 1, -20
 464              		.cfi_offset 0, -24
 164:math/pprz_geodetic_int.c ****   struct EnuCoor_i enu;
 165:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(enu, *ned);
 465              		.loc 1 165 0
 466 0002 5368     		ldr	r3, [r2, #4]
 467 0004 0193     		str	r3, [sp, #4]
 468 0006 1368     		ldr	r3, [r2, #0]
 469 0008 0293     		str	r3, [sp, #8]
 470 000a 9368     		ldr	r3, [r2, #8]
 166:math/pprz_geodetic_int.c ****   ecef_of_enu_vect_i(ecef, def, &enu);
 471              		.loc 1 166 0
 472 000c 01AA     		add	r2, sp, #4
 473              	.LVL26:
 165:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(enu, *ned);
 474              		.loc 1 165 0
 475 000e 5B42     		negs	r3, r3
 476 0010 0393     		str	r3, [sp, #12]
 477              		.loc 1 166 0
 478 0012 FFF7FEFF 		bl	ecef_of_enu_vect_i
 479              	.LVL27:
 167:math/pprz_geodetic_int.c **** }
 480              		.loc 1 167 0
 481 0016 05B0     		add	sp, sp, #20
 482 0018 00BD     		pop	{pc}
 483              		.cfi_endproc
 484              	.LFE9:
 486              		.global	__aeabi_i2d
 487              		.global	__aeabi_ddiv
 488              		.global	__aeabi_dmul
 489              		.global	__aeabi_d2iz
 490              		.section	.text.lla_of_ecef_i,"ax",%progbits
 491              		.align	1
 492              		.global	lla_of_ecef_i
 493              		.thumb
 494              		.thumb_func
 496              	lla_of_ecef_i:
 497              	.LFB16:
 168:math/pprz_geodetic_int.c **** 
 169:math/pprz_geodetic_int.c **** 
 170:math/pprz_geodetic_int.c **** void enu_of_lla_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 171:math/pprz_geodetic_int.c ****   struct EcefCoor_i ecef;
 172:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 173:math/pprz_geodetic_int.c ****   enu_of_ecef_point_i(enu,def,&ecef);
 174:math/pprz_geodetic_int.c **** }
 175:math/pprz_geodetic_int.c **** 
 176:math/pprz_geodetic_int.c **** void ned_of_lla_point_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 177:math/pprz_geodetic_int.c ****   struct EcefCoor_i ecef;
 178:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 179:math/pprz_geodetic_int.c ****   ned_of_ecef_point_i(ned,def,&ecef);
 180:math/pprz_geodetic_int.c **** }
 181:math/pprz_geodetic_int.c **** 
 182:math/pprz_geodetic_int.c **** void enu_of_lla_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 183:math/pprz_geodetic_int.c ****   struct EcefCoor_i ecef;
 184:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 185:math/pprz_geodetic_int.c ****   enu_of_ecef_vect_i(enu,def,&ecef);
 186:math/pprz_geodetic_int.c **** }
 187:math/pprz_geodetic_int.c **** 
 188:math/pprz_geodetic_int.c **** void ned_of_lla_vect_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 189:math/pprz_geodetic_int.c ****   struct EcefCoor_i ecef;
 190:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 191:math/pprz_geodetic_int.c ****   ned_of_ecef_vect_i(ned,def,&ecef);
 192:math/pprz_geodetic_int.c **** }
 193:math/pprz_geodetic_int.c **** 
 194:math/pprz_geodetic_int.c **** /*
 195:math/pprz_geodetic_int.c ****    For now we cheat and call the floating point version
 196:math/pprz_geodetic_int.c ****    Anyone up for writing it in fixed point ?
 197:math/pprz_geodetic_int.c **** */
 198:math/pprz_geodetic_int.c **** #include "pprz_geodetic_float.h"
 199:math/pprz_geodetic_int.c **** #include "pprz_geodetic_double.h"
 200:math/pprz_geodetic_int.c **** 
 201:math/pprz_geodetic_int.c **** void lla_of_ecef_i(struct LlaCoor_i* out, struct EcefCoor_i* in) {
 498              		.loc 1 201 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 48
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              	.LVL28:
 503 0000 30B5     		push	{r4, r5, lr}
 504              	.LCFI8:
 505              		.cfi_def_cfa_offset 12
 506              		.cfi_offset 14, -4
 507              		.cfi_offset 5, -8
 508              		.cfi_offset 4, -12
 509 0002 0446     		mov	r4, r0
 510 0004 8DB0     		sub	sp, sp, #52
 511              	.LCFI9:
 512              		.cfi_def_cfa_offset 64
 202:math/pprz_geodetic_int.c **** 
 203:math/pprz_geodetic_int.c ****   /* convert our input to floating point */
 204:math/pprz_geodetic_int.c ****   struct EcefCoor_d in_d;
 205:math/pprz_geodetic_int.c ****   in_d.x = M_OF_CM((double)in->x);
 513              		.loc 1 205 0
 514 0006 0868     		ldr	r0, [r1, #0]
 515              	.LVL29:
 201:math/pprz_geodetic_int.c **** void lla_of_ecef_i(struct LlaCoor_i* out, struct EcefCoor_i* in) {
 516              		.loc 1 201 0
 517 0008 0D46     		mov	r5, r1
 518              		.loc 1 205 0
 519 000a FFF7FEFF 		bl	__aeabi_i2d
 520              	.LVL30:
 521 000e 0022     		movs	r2, #0
 522 0010 214B     		ldr	r3, .L10+8
 523 0012 FFF7FEFF 		bl	__aeabi_ddiv
 524 0016 CDE90001 		strd	r0, [sp]
 206:math/pprz_geodetic_int.c ****   in_d.y = M_OF_CM((double)in->y);
 525              		.loc 1 206 0
 526 001a 6868     		ldr	r0, [r5, #4]
 527 001c FFF7FEFF 		bl	__aeabi_i2d
 528 0020 0022     		movs	r2, #0
 529 0022 1D4B     		ldr	r3, .L10+8
 530 0024 FFF7FEFF 		bl	__aeabi_ddiv
 531 0028 CDE90201 		strd	r0, [sp, #8]
 207:math/pprz_geodetic_int.c ****   in_d.z = M_OF_CM((double)in->z);
 532              		.loc 1 207 0
 533 002c A868     		ldr	r0, [r5, #8]
 534 002e FFF7FEFF 		bl	__aeabi_i2d
 535 0032 0022     		movs	r2, #0
 536 0034 184B     		ldr	r3, .L10+8
 537 0036 FFF7FEFF 		bl	__aeabi_ddiv
 538 003a CDE90401 		strd	r0, [sp, #16]
 208:math/pprz_geodetic_int.c ****   /* calls the floating point transformation */
 209:math/pprz_geodetic_int.c ****   struct LlaCoor_d out_d;
 210:math/pprz_geodetic_int.c ****   lla_of_ecef_d(&out_d, &in_d);
 539              		.loc 1 210 0
 540 003e 06A8     		add	r0, sp, #24
 541 0040 6946     		mov	r1, sp
 542 0042 FFF7FEFF 		bl	lla_of_ecef_d
 211:math/pprz_geodetic_int.c ****   /* convert the output to fixed point       */
 212:math/pprz_geodetic_int.c ****   out->lon = (int32_t)rint(EM7RAD_OF_RAD(out_d.lon));
 543              		.loc 1 212 0
 544 0046 12A3     		adr	r3, .L10
 545 0048 D3E90023 		ldrd	r2, [r3]
 546 004c DDE90601 		ldrd	r0, [sp, #24]
 547 0050 FFF7FEFF 		bl	__aeabi_dmul
 548 0054 FFF7FEFF 		bl	rint
 549 0058 FFF7FEFF 		bl	__aeabi_d2iz
 213:math/pprz_geodetic_int.c ****   out->lat = (int32_t)rint(EM7RAD_OF_RAD(out_d.lat));
 550              		.loc 1 213 0
 551 005c 0CA3     		adr	r3, .L10
 552 005e D3E90023 		ldrd	r2, [r3]
 212:math/pprz_geodetic_int.c ****   out->lon = (int32_t)rint(EM7RAD_OF_RAD(out_d.lon));
 553              		.loc 1 212 0
 554 0062 2060     		str	r0, [r4, #0]
 555              		.loc 1 213 0
 556 0064 DDE90801 		ldrd	r0, [sp, #32]
 557 0068 FFF7FEFF 		bl	__aeabi_dmul
 558 006c FFF7FEFF 		bl	rint
 559 0070 FFF7FEFF 		bl	__aeabi_d2iz
 214:math/pprz_geodetic_int.c ****   out->alt = (int32_t)MM_OF_M(out_d.alt);
 560              		.loc 1 214 0
 561 0074 0022     		movs	r2, #0
 213:math/pprz_geodetic_int.c ****   out->lat = (int32_t)rint(EM7RAD_OF_RAD(out_d.lat));
 562              		.loc 1 213 0
 563 0076 6060     		str	r0, [r4, #4]
 564              		.loc 1 214 0
 565 0078 084B     		ldr	r3, .L10+12
 566 007a DDE90A01 		ldrd	r0, [sp, #40]
 567 007e FFF7FEFF 		bl	__aeabi_dmul
 568 0082 FFF7FEFF 		bl	__aeabi_d2iz
 569 0086 A060     		str	r0, [r4, #8]
 215:math/pprz_geodetic_int.c **** 
 216:math/pprz_geodetic_int.c **** }
 570              		.loc 1 216 0
 571 0088 0DB0     		add	sp, sp, #52
 572 008a 30BD     		pop	{r4, r5, pc}
 573              	.L11:
 574 008c AFF30080 		.align	3
 575              	.L10:
 576 0090 00000000 		.word	0
 577 0094 D0126341 		.word	1097011920
 578 0098 00005940 		.word	1079574528
 579 009c 00408F40 		.word	1083129856
 580              		.cfi_endproc
 581              	.LFE16:
 583              		.global	__aeabi_i2f
 584              		.global	__aeabi_fdiv
 585              		.global	__aeabi_fmul
 586              		.global	__aeabi_f2d
 587              		.section	.text.ltp_def_from_ecef_i,"ax",%progbits
 588              		.align	1
 589              		.global	ltp_def_from_ecef_i
 590              		.thumb
 591              		.thumb_func
 593              	ltp_def_from_ecef_i:
 594              	.LFB0:
  29:math/pprz_geodetic_int.c **** void ltp_def_from_ecef_i(struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 595              		.loc 1 29 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              	.LVL31:
 600 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 601              	.LCFI10:
 602              		.cfi_def_cfa_offset 32
 603              		.cfi_offset 14, -4
 604              		.cfi_offset 9, -8
 605              		.cfi_offset 8, -12
 606              		.cfi_offset 7, -16
 607              		.cfi_offset 6, -20
 608              		.cfi_offset 5, -24
 609              		.cfi_offset 4, -28
 610              		.cfi_offset 3, -32
  32:math/pprz_geodetic_int.c ****   VECT3_COPY(def->ecef, *ecef);
 611              		.loc 1 32 0
 612 0004 0B68     		ldr	r3, [r1, #0]
  29:math/pprz_geodetic_int.c **** void ltp_def_from_ecef_i(struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 613              		.loc 1 29 0
 614 0006 0446     		mov	r4, r0
  32:math/pprz_geodetic_int.c ****   VECT3_COPY(def->ecef, *ecef);
 615              		.loc 1 32 0
 616 0008 0360     		str	r3, [r0, #0]
 617 000a 4B68     		ldr	r3, [r1, #4]
 618 000c 4360     		str	r3, [r0, #4]
 619 000e 8B68     		ldr	r3, [r1, #8]
  34:math/pprz_geodetic_int.c ****   lla_of_ecef_i(&def->lla, &def->ecef);
 620              		.loc 1 34 0
 621 0010 2146     		mov	r1, r4
 622              	.LVL32:
  32:math/pprz_geodetic_int.c ****   VECT3_COPY(def->ecef, *ecef);
 623              		.loc 1 32 0
 624 0012 8360     		str	r3, [r0, #8]
  34:math/pprz_geodetic_int.c ****   lla_of_ecef_i(&def->lla, &def->ecef);
 625              		.loc 1 34 0
 626 0014 00F10C00 		add	r0, r0, #12
 627              	.LVL33:
 628 0018 FFF7FEFF 		bl	lla_of_ecef_i
 629              	.LVL34:
  38:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
 630              		.loc 1 38 0
 631 001c 2069     		ldr	r0, [r4, #16]
 632 001e FFF7FEFF 		bl	__aeabi_i2f
 633 0022 3D49     		ldr	r1, .L13
 634 0024 FFF7FEFF 		bl	__aeabi_fdiv
 635 0028 FFF7FEFF 		bl	sinf
 636 002c 4FF09341 		mov	r1, #1233125376
 637 0030 FFF7FEFF 		bl	__aeabi_fmul
 638 0034 FFF7FEFF 		bl	__aeabi_f2d
 639 0038 FFF7FEFF 		bl	rint
 640 003c FFF7FEFF 		bl	__aeabi_d2iz
 641 0040 8146     		mov	r9, r0
 642              	.LVL35:
  39:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
 643              		.loc 1 39 0
 644 0042 2069     		ldr	r0, [r4, #16]
 645              	.LVL36:
 646 0044 FFF7FEFF 		bl	__aeabi_i2f
 647 0048 3349     		ldr	r1, .L13
 648 004a FFF7FEFF 		bl	__aeabi_fdiv
 649 004e FFF7FEFF 		bl	cosf
 650 0052 4FF09341 		mov	r1, #1233125376
 651 0056 FFF7FEFF 		bl	__aeabi_fmul
 652 005a FFF7FEFF 		bl	__aeabi_f2d
 653 005e FFF7FEFF 		bl	rint
 654 0062 FFF7FEFF 		bl	__aeabi_d2iz
 655 0066 8046     		mov	r8, r0
 656              	.LVL37:
  40:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
 657              		.loc 1 40 0
 658 0068 E068     		ldr	r0, [r4, #12]
 659              	.LVL38:
 660 006a FFF7FEFF 		bl	__aeabi_i2f
 661 006e 2A49     		ldr	r1, .L13
 662 0070 FFF7FEFF 		bl	__aeabi_fdiv
 663 0074 FFF7FEFF 		bl	sinf
 664 0078 4FF09341 		mov	r1, #1233125376
 665 007c FFF7FEFF 		bl	__aeabi_fmul
 666 0080 FFF7FEFF 		bl	__aeabi_f2d
 667 0084 FFF7FEFF 		bl	rint
 668 0088 FFF7FEFF 		bl	__aeabi_d2iz
 669 008c 0546     		mov	r5, r0
 670              	.LVL39:
  41:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
 671              		.loc 1 41 0
 672 008e E068     		ldr	r0, [r4, #12]
 673              	.LVL40:
 674 0090 FFF7FEFF 		bl	__aeabi_i2f
 675 0094 2049     		ldr	r1, .L13
 676 0096 FFF7FEFF 		bl	__aeabi_fdiv
 677 009a FFF7FEFF 		bl	cosf
 678 009e 4FF09341 		mov	r1, #1233125376
 679 00a2 FFF7FEFF 		bl	__aeabi_fmul
 680 00a6 FFF7FEFF 		bl	__aeabi_f2d
 681 00aa FFF7FEFF 		bl	rint
 682 00ae FFF7FEFF 		bl	__aeabi_d2iz
 683              	.LVL41:
  50:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 684              		.loc 1 50 0
 685 00b2 6B42     		negs	r3, r5
  53:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 686              		.loc 1 53 0
 687 00b4 4A46     		mov	r2, r9
  50:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 688              		.loc 1 50 0
 689 00b6 A361     		str	r3, [r4, #24]
  52:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[2] =  0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_
 690              		.loc 1 52 0
 691 00b8 0023     		movs	r3, #0
 692 00ba 2362     		str	r3, [r4, #32]
  53:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 693              		.loc 1 53 0
 694 00bc D317     		asrs	r3, r2, #31
 695 00be 5242     		negs	r2, r2
 696 00c0 63EB4303 		sbc	r3, r3, r3, lsl #1
 697 00c4 C117     		asrs	r1, r0, #31
 698 00c6 5143     		muls	r1, r2, r1
 699 00c8 A2FB0067 		umull	r6, r7, r2, r0
 700 00cc 00FB0311 		mla	r1, r0, r3, r1
 701 00d0 CF19     		adds	r7, r1, r7
 702 00d2 310D     		lsrs	r1, r6, #20
 703 00d4 41EA0731 		orr	r1, r1, r7, lsl #12
 704 00d8 6162     		str	r1, [r4, #36]
  54:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 705              		.loc 1 54 0
 706 00da E917     		asrs	r1, r5, #31
 707 00dc 5143     		muls	r1, r2, r1
 708 00de 05FB0311 		mla	r1, r5, r3, r1
 709 00e2 A2FB0523 		umull	r2, r3, r2, r5
  51:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 710              		.loc 1 51 0
 711 00e6 E061     		str	r0, [r4, #28]
  54:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 712              		.loc 1 54 0
 713 00e8 CB18     		adds	r3, r1, r3
  56:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 714              		.loc 1 56 0
 715 00ea 88FB0001 		smull	r0, r1, r8, r0
 716              	.LVL42:
  54:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 717              		.loc 1 54 0
 718 00ee 120D     		lsrs	r2, r2, #20
 719 00f0 42EA0332 		orr	r2, r2, r3, lsl #12
  56:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 720              		.loc 1 56 0
 721 00f4 030D     		lsrs	r3, r0, #20
 722 00f6 43EA0133 		orr	r3, r3, r1, lsl #12
  54:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 723              		.loc 1 54 0
 724 00fa A262     		str	r2, [r4, #40]
  56:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 725              		.loc 1 56 0
 726 00fc 2363     		str	r3, [r4, #48]
  57:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 727              		.loc 1 57 0
 728 00fe 88FB0523 		smull	r2, r3, r8, r5
 729 0102 120D     		lsrs	r2, r2, #20
 730 0104 42EA0332 		orr	r2, r2, r3, lsl #12
  55:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 731              		.loc 1 55 0
 732 0108 C4F82C80 		str	r8, [r4, #44]
  57:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 733              		.loc 1 57 0
 734 010c 6263     		str	r2, [r4, #52]
  58:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 735              		.loc 1 58 0
 736 010e C4F83890 		str	r9, [r4, #56]
  60:math/pprz_geodetic_int.c **** }
 737              		.loc 1 60 0
 738 0112 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 739              	.L14:
 740 0116 00BF     		.align	2
 741              	.L13:
 742 0118 8096184B 		.word	1259902592
 743              		.cfi_endproc
 744              	.LFE0:
 746              		.section	.text.ecef_of_lla_i,"ax",%progbits
 747              		.align	1
 748              		.global	ecef_of_lla_i
 749              		.thumb
 750              		.thumb_func
 752              	ecef_of_lla_i:
 753              	.LFB17:
 217:math/pprz_geodetic_int.c **** 
 218:math/pprz_geodetic_int.c **** void ecef_of_lla_i(struct EcefCoor_i* out, struct LlaCoor_i* in) {
 754              		.loc 1 218 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 48
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              	.LVL43:
 759 0000 30B5     		push	{r4, r5, lr}
 760              	.LCFI11:
 761              		.cfi_def_cfa_offset 12
 762              		.cfi_offset 14, -4
 763              		.cfi_offset 5, -8
 764              		.cfi_offset 4, -12
 765 0002 0446     		mov	r4, r0
 766 0004 8DB0     		sub	sp, sp, #52
 767              	.LCFI12:
 768              		.cfi_def_cfa_offset 64
 219:math/pprz_geodetic_int.c **** 
 220:math/pprz_geodetic_int.c ****   /* convert our input to floating point */
 221:math/pprz_geodetic_int.c ****   struct LlaCoor_d in_d;
 222:math/pprz_geodetic_int.c ****   in_d.lon = RAD_OF_EM7RAD((double)in->lon);
 769              		.loc 1 222 0
 770 0006 0868     		ldr	r0, [r1, #0]
 771              	.LVL44:
 218:math/pprz_geodetic_int.c **** void ecef_of_lla_i(struct EcefCoor_i* out, struct LlaCoor_i* in) {
 772              		.loc 1 218 0
 773 0008 0D46     		mov	r5, r1
 774              		.loc 1 222 0
 775 000a FFF7FEFF 		bl	__aeabi_i2d
 776              	.LVL45:
 777 000e 1EA3     		adr	r3, .L16
 778 0010 D3E90023 		ldrd	r2, [r3]
 779 0014 FFF7FEFF 		bl	__aeabi_ddiv
 780 0018 CDE90001 		strd	r0, [sp]
 223:math/pprz_geodetic_int.c ****   in_d.lat = RAD_OF_EM7RAD((double)in->lat);
 781              		.loc 1 223 0
 782 001c 6868     		ldr	r0, [r5, #4]
 783 001e FFF7FEFF 		bl	__aeabi_i2d
 784 0022 19A3     		adr	r3, .L16
 785 0024 D3E90023 		ldrd	r2, [r3]
 786 0028 FFF7FEFF 		bl	__aeabi_ddiv
 787 002c CDE90201 		strd	r0, [sp, #8]
 224:math/pprz_geodetic_int.c ****   in_d.alt = M_OF_MM((double)in->alt);
 788              		.loc 1 224 0
 789 0030 A868     		ldr	r0, [r5, #8]
 790 0032 FFF7FEFF 		bl	__aeabi_i2d
 791 0036 0022     		movs	r2, #0
 792 0038 154B     		ldr	r3, .L16+8
 793 003a FFF7FEFF 		bl	__aeabi_ddiv
 794 003e CDE90401 		strd	r0, [sp, #16]
 225:math/pprz_geodetic_int.c ****   /* calls the floating point transformation */
 226:math/pprz_geodetic_int.c ****   struct EcefCoor_d out_d;
 227:math/pprz_geodetic_int.c ****   ecef_of_lla_d(&out_d, &in_d);
 795              		.loc 1 227 0
 796 0042 06A8     		add	r0, sp, #24
 797 0044 6946     		mov	r1, sp
 798 0046 FFF7FEFF 		bl	ecef_of_lla_d
 228:math/pprz_geodetic_int.c ****   /* convert the output to fixed point       */
 229:math/pprz_geodetic_int.c ****   out->x = (int32_t)CM_OF_M(out_d.x);
 799              		.loc 1 229 0
 800 004a DDE90601 		ldrd	r0, [sp, #24]
 801 004e 0022     		movs	r2, #0
 802 0050 104B     		ldr	r3, .L16+12
 803 0052 FFF7FEFF 		bl	__aeabi_dmul
 804 0056 FFF7FEFF 		bl	__aeabi_d2iz
 230:math/pprz_geodetic_int.c ****   out->y = (int32_t)CM_OF_M(out_d.y);
 805              		.loc 1 230 0
 806 005a 0022     		movs	r2, #0
 807 005c 0D4B     		ldr	r3, .L16+12
 229:math/pprz_geodetic_int.c ****   out->x = (int32_t)CM_OF_M(out_d.x);
 808              		.loc 1 229 0
 809 005e 2060     		str	r0, [r4, #0]
 810              		.loc 1 230 0
 811 0060 DDE90801 		ldrd	r0, [sp, #32]
 812 0064 FFF7FEFF 		bl	__aeabi_dmul
 813 0068 FFF7FEFF 		bl	__aeabi_d2iz
 231:math/pprz_geodetic_int.c ****   out->z = (int32_t)CM_OF_M(out_d.z);
 814              		.loc 1 231 0
 815 006c 0022     		movs	r2, #0
 230:math/pprz_geodetic_int.c ****   out->y = (int32_t)CM_OF_M(out_d.y);
 816              		.loc 1 230 0
 817 006e 6060     		str	r0, [r4, #4]
 818              		.loc 1 231 0
 819 0070 084B     		ldr	r3, .L16+12
 820 0072 DDE90A01 		ldrd	r0, [sp, #40]
 821 0076 FFF7FEFF 		bl	__aeabi_dmul
 822 007a FFF7FEFF 		bl	__aeabi_d2iz
 823 007e A060     		str	r0, [r4, #8]
 232:math/pprz_geodetic_int.c **** 
 233:math/pprz_geodetic_int.c **** }
 824              		.loc 1 233 0
 825 0080 0DB0     		add	sp, sp, #52
 826 0082 30BD     		pop	{r4, r5, pc}
 827              	.L17:
 828 0084 AFF30080 		.align	3
 829              	.L16:
 830 0088 00000000 		.word	0
 831 008c D0126341 		.word	1097011920
 832 0090 00408F40 		.word	1083129856
 833 0094 00005940 		.word	1079574528
 834              		.cfi_endproc
 835              	.LFE17:
 837              		.section	.text.ned_of_lla_vect_i,"ax",%progbits
 838              		.align	1
 839              		.global	ned_of_lla_vect_i
 840              		.thumb
 841              		.thumb_func
 843              	ned_of_lla_vect_i:
 844              	.LFB13:
 188:math/pprz_geodetic_int.c **** void ned_of_lla_vect_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 845              		.loc 1 188 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 16
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              	.LVL46:
 850 0000 30B5     		push	{r4, r5, lr}
 851              	.LCFI13:
 852              		.cfi_def_cfa_offset 12
 853              		.cfi_offset 14, -4
 854              		.cfi_offset 5, -8
 855              		.cfi_offset 4, -12
 856 0002 85B0     		sub	sp, sp, #20
 857              	.LCFI14:
 858              		.cfi_def_cfa_offset 32
 188:math/pprz_geodetic_int.c **** void ned_of_lla_vect_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 859              		.loc 1 188 0
 860 0004 0546     		mov	r5, r0
 861 0006 0C46     		mov	r4, r1
 190:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 862              		.loc 1 190 0
 863 0008 01A8     		add	r0, sp, #4
 864              	.LVL47:
 865 000a 1146     		mov	r1, r2
 866              	.LVL48:
 867 000c FFF7FEFF 		bl	ecef_of_lla_i
 868              	.LVL49:
 191:math/pprz_geodetic_int.c ****   ned_of_ecef_vect_i(ned,def,&ecef);
 869              		.loc 1 191 0
 870 0010 2846     		mov	r0, r5
 871 0012 2146     		mov	r1, r4
 872 0014 01AA     		add	r2, sp, #4
 873 0016 FFF7FEFF 		bl	ned_of_ecef_vect_i
 192:math/pprz_geodetic_int.c **** }
 874              		.loc 1 192 0
 875 001a 05B0     		add	sp, sp, #20
 876 001c 30BD     		pop	{r4, r5, pc}
 877              		.cfi_endproc
 878              	.LFE13:
 880              		.section	.text.enu_of_lla_vect_i,"ax",%progbits
 881              		.align	1
 882              		.global	enu_of_lla_vect_i
 883              		.thumb
 884              		.thumb_func
 886              	enu_of_lla_vect_i:
 887              	.LFB12:
 182:math/pprz_geodetic_int.c **** void enu_of_lla_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 888              		.loc 1 182 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 16
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              	.LVL50:
 893 0000 30B5     		push	{r4, r5, lr}
 894              	.LCFI15:
 895              		.cfi_def_cfa_offset 12
 896              		.cfi_offset 14, -4
 897              		.cfi_offset 5, -8
 898              		.cfi_offset 4, -12
 899 0002 85B0     		sub	sp, sp, #20
 900              	.LCFI16:
 901              		.cfi_def_cfa_offset 32
 182:math/pprz_geodetic_int.c **** void enu_of_lla_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 902              		.loc 1 182 0
 903 0004 0546     		mov	r5, r0
 904 0006 0C46     		mov	r4, r1
 184:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 905              		.loc 1 184 0
 906 0008 01A8     		add	r0, sp, #4
 907              	.LVL51:
 908 000a 1146     		mov	r1, r2
 909              	.LVL52:
 910 000c FFF7FEFF 		bl	ecef_of_lla_i
 911              	.LVL53:
 185:math/pprz_geodetic_int.c ****   enu_of_ecef_vect_i(enu,def,&ecef);
 912              		.loc 1 185 0
 913 0010 2846     		mov	r0, r5
 914 0012 2146     		mov	r1, r4
 915 0014 01AA     		add	r2, sp, #4
 916 0016 FFF7FEFF 		bl	enu_of_ecef_vect_i
 186:math/pprz_geodetic_int.c **** }
 917              		.loc 1 186 0
 918 001a 05B0     		add	sp, sp, #20
 919 001c 30BD     		pop	{r4, r5, pc}
 920              		.cfi_endproc
 921              	.LFE12:
 923              		.section	.text.ned_of_lla_point_i,"ax",%progbits
 924              		.align	1
 925              		.global	ned_of_lla_point_i
 926              		.thumb
 927              		.thumb_func
 929              	ned_of_lla_point_i:
 930              	.LFB11:
 176:math/pprz_geodetic_int.c **** void ned_of_lla_point_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 931              		.loc 1 176 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 16
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              	.LVL54:
 936 0000 30B5     		push	{r4, r5, lr}
 937              	.LCFI17:
 938              		.cfi_def_cfa_offset 12
 939              		.cfi_offset 14, -4
 940              		.cfi_offset 5, -8
 941              		.cfi_offset 4, -12
 942 0002 85B0     		sub	sp, sp, #20
 943              	.LCFI18:
 944              		.cfi_def_cfa_offset 32
 176:math/pprz_geodetic_int.c **** void ned_of_lla_point_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 945              		.loc 1 176 0
 946 0004 0546     		mov	r5, r0
 947 0006 0C46     		mov	r4, r1
 178:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 948              		.loc 1 178 0
 949 0008 01A8     		add	r0, sp, #4
 950              	.LVL55:
 951 000a 1146     		mov	r1, r2
 952              	.LVL56:
 953 000c FFF7FEFF 		bl	ecef_of_lla_i
 954              	.LVL57:
 179:math/pprz_geodetic_int.c ****   ned_of_ecef_point_i(ned,def,&ecef);
 955              		.loc 1 179 0
 956 0010 2846     		mov	r0, r5
 957 0012 2146     		mov	r1, r4
 958 0014 01AA     		add	r2, sp, #4
 959 0016 FFF7FEFF 		bl	ned_of_ecef_point_i
 180:math/pprz_geodetic_int.c **** }
 960              		.loc 1 180 0
 961 001a 05B0     		add	sp, sp, #20
 962 001c 30BD     		pop	{r4, r5, pc}
 963              		.cfi_endproc
 964              	.LFE11:
 966              		.section	.text.enu_of_lla_point_i,"ax",%progbits
 967              		.align	1
 968              		.global	enu_of_lla_point_i
 969              		.thumb
 970              		.thumb_func
 972              	enu_of_lla_point_i:
 973              	.LFB10:
 170:math/pprz_geodetic_int.c **** void enu_of_lla_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 974              		.loc 1 170 0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 16
 977              		@ frame_needed = 0, uses_anonymous_args = 0
 978              	.LVL58:
 979 0000 30B5     		push	{r4, r5, lr}
 980              	.LCFI19:
 981              		.cfi_def_cfa_offset 12
 982              		.cfi_offset 14, -4
 983              		.cfi_offset 5, -8
 984              		.cfi_offset 4, -12
 985 0002 85B0     		sub	sp, sp, #20
 986              	.LCFI20:
 987              		.cfi_def_cfa_offset 32
 170:math/pprz_geodetic_int.c **** void enu_of_lla_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 988              		.loc 1 170 0
 989 0004 0546     		mov	r5, r0
 990 0006 0C46     		mov	r4, r1
 172:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 991              		.loc 1 172 0
 992 0008 01A8     		add	r0, sp, #4
 993              	.LVL59:
 994 000a 1146     		mov	r1, r2
 995              	.LVL60:
 996 000c FFF7FEFF 		bl	ecef_of_lla_i
 997              	.LVL61:
 173:math/pprz_geodetic_int.c ****   enu_of_ecef_point_i(enu,def,&ecef);
 998              		.loc 1 173 0
 999 0010 2846     		mov	r0, r5
 1000 0012 2146     		mov	r1, r4
 1001 0014 01AA     		add	r2, sp, #4
 1002 0016 FFF7FEFF 		bl	enu_of_ecef_point_i
 174:math/pprz_geodetic_int.c **** }
 1003              		.loc 1 174 0
 1004 001a 05B0     		add	sp, sp, #20
 1005 001c 30BD     		pop	{r4, r5, pc}
 1006              		.cfi_endproc
 1007              	.LFE10:
 1009              		.section	.text.ltp_def_from_lla_i,"ax",%progbits
 1010              		.align	1
 1011              		.global	ltp_def_from_lla_i
 1012              		.thumb
 1013              		.thumb_func
 1015              	ltp_def_from_lla_i:
 1016              	.LFB1:
  62:math/pprz_geodetic_int.c **** void ltp_def_from_lla_i(struct LtpDef_i* def, struct LlaCoor_i* lla) {
 1017              		.loc 1 62 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              	.LVL62:
 1022 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1023              	.LCFI21:
 1024              		.cfi_def_cfa_offset 32
 1025              		.cfi_offset 14, -4
 1026              		.cfi_offset 9, -8
 1027              		.cfi_offset 8, -12
 1028              		.cfi_offset 7, -16
 1029              		.cfi_offset 6, -20
 1030              		.cfi_offset 5, -24
 1031              		.cfi_offset 4, -28
 1032              		.cfi_offset 3, -32
  65:math/pprz_geodetic_int.c ****   LLA_COPY(def->lla, *lla);
 1033              		.loc 1 65 0
 1034 0004 4B68     		ldr	r3, [r1, #4]
  62:math/pprz_geodetic_int.c **** void ltp_def_from_lla_i(struct LtpDef_i* def, struct LlaCoor_i* lla) {
 1035              		.loc 1 62 0
 1036 0006 0446     		mov	r4, r0
  65:math/pprz_geodetic_int.c ****   LLA_COPY(def->lla, *lla);
 1037              		.loc 1 65 0
 1038 0008 0361     		str	r3, [r0, #16]
 1039 000a 0B68     		ldr	r3, [r1, #0]
 1040 000c C360     		str	r3, [r0, #12]
 1041 000e 8B68     		ldr	r3, [r1, #8]
  67:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&def->ecef, &def->lla);
 1042              		.loc 1 67 0
 1043 0010 00F10C01 		add	r1, r0, #12
 1044              	.LVL63:
  65:math/pprz_geodetic_int.c ****   LLA_COPY(def->lla, *lla);
 1045              		.loc 1 65 0
 1046 0014 4361     		str	r3, [r0, #20]
  67:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&def->ecef, &def->lla);
 1047              		.loc 1 67 0
 1048 0016 FFF7FEFF 		bl	ecef_of_lla_i
 1049              	.LVL64:
  71:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
 1050              		.loc 1 71 0
 1051 001a 2069     		ldr	r0, [r4, #16]
 1052 001c FFF7FEFF 		bl	__aeabi_i2f
 1053 0020 3C49     		ldr	r1, .L23
 1054 0022 FFF7FEFF 		bl	__aeabi_fdiv
 1055 0026 FFF7FEFF 		bl	sinf
 1056 002a 4FF09341 		mov	r1, #1233125376
 1057 002e FFF7FEFF 		bl	__aeabi_fmul
 1058 0032 FFF7FEFF 		bl	__aeabi_f2d
 1059 0036 FFF7FEFF 		bl	rint
 1060 003a FFF7FEFF 		bl	__aeabi_d2iz
 1061 003e 8146     		mov	r9, r0
 1062              	.LVL65:
  72:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
 1063              		.loc 1 72 0
 1064 0040 2069     		ldr	r0, [r4, #16]
 1065              	.LVL66:
 1066 0042 FFF7FEFF 		bl	__aeabi_i2f
 1067 0046 3349     		ldr	r1, .L23
 1068 0048 FFF7FEFF 		bl	__aeabi_fdiv
 1069 004c FFF7FEFF 		bl	cosf
 1070 0050 4FF09341 		mov	r1, #1233125376
 1071 0054 FFF7FEFF 		bl	__aeabi_fmul
 1072 0058 FFF7FEFF 		bl	__aeabi_f2d
 1073 005c FFF7FEFF 		bl	rint
 1074 0060 FFF7FEFF 		bl	__aeabi_d2iz
 1075 0064 8046     		mov	r8, r0
 1076              	.LVL67:
  73:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
 1077              		.loc 1 73 0
 1078 0066 E068     		ldr	r0, [r4, #12]
 1079              	.LVL68:
 1080 0068 FFF7FEFF 		bl	__aeabi_i2f
 1081 006c 2949     		ldr	r1, .L23
 1082 006e FFF7FEFF 		bl	__aeabi_fdiv
 1083 0072 FFF7FEFF 		bl	sinf
 1084 0076 4FF09341 		mov	r1, #1233125376
 1085 007a FFF7FEFF 		bl	__aeabi_fmul
 1086 007e FFF7FEFF 		bl	__aeabi_f2d
 1087 0082 FFF7FEFF 		bl	rint
 1088 0086 FFF7FEFF 		bl	__aeabi_d2iz
 1089 008a 0546     		mov	r5, r0
 1090              	.LVL69:
  74:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
 1091              		.loc 1 74 0
 1092 008c E068     		ldr	r0, [r4, #12]
 1093              	.LVL70:
 1094 008e FFF7FEFF 		bl	__aeabi_i2f
 1095 0092 2049     		ldr	r1, .L23
 1096 0094 FFF7FEFF 		bl	__aeabi_fdiv
 1097 0098 FFF7FEFF 		bl	cosf
 1098 009c 4FF09341 		mov	r1, #1233125376
 1099 00a0 FFF7FEFF 		bl	__aeabi_fmul
 1100 00a4 FFF7FEFF 		bl	__aeabi_f2d
 1101 00a8 FFF7FEFF 		bl	rint
 1102 00ac FFF7FEFF 		bl	__aeabi_d2iz
 1103              	.LVL71:
  83:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1104              		.loc 1 83 0
 1105 00b0 6B42     		negs	r3, r5
  86:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1106              		.loc 1 86 0
 1107 00b2 4A46     		mov	r2, r9
  83:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1108              		.loc 1 83 0
 1109 00b4 A361     		str	r3, [r4, #24]
  85:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[2] =  0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_
 1110              		.loc 1 85 0
 1111 00b6 0023     		movs	r3, #0
 1112 00b8 2362     		str	r3, [r4, #32]
  86:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1113              		.loc 1 86 0
 1114 00ba D317     		asrs	r3, r2, #31
 1115 00bc 5242     		negs	r2, r2
 1116 00be 63EB4303 		sbc	r3, r3, r3, lsl #1
 1117 00c2 C117     		asrs	r1, r0, #31
 1118 00c4 5143     		muls	r1, r2, r1
 1119 00c6 A2FB0067 		umull	r6, r7, r2, r0
 1120 00ca 00FB0311 		mla	r1, r0, r3, r1
 1121 00ce CF19     		adds	r7, r1, r7
 1122 00d0 310D     		lsrs	r1, r6, #20
 1123 00d2 41EA0731 		orr	r1, r1, r7, lsl #12
 1124 00d6 6162     		str	r1, [r4, #36]
  87:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1125              		.loc 1 87 0
 1126 00d8 E917     		asrs	r1, r5, #31
 1127 00da 5143     		muls	r1, r2, r1
 1128 00dc 05FB0311 		mla	r1, r5, r3, r1
 1129 00e0 A2FB0523 		umull	r2, r3, r2, r5
  84:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1130              		.loc 1 84 0
 1131 00e4 E061     		str	r0, [r4, #28]
  87:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1132              		.loc 1 87 0
 1133 00e6 CB18     		adds	r3, r1, r3
  89:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1134              		.loc 1 89 0
 1135 00e8 88FB0001 		smull	r0, r1, r8, r0
 1136              	.LVL72:
  87:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1137              		.loc 1 87 0
 1138 00ec 120D     		lsrs	r2, r2, #20
 1139 00ee 42EA0332 		orr	r2, r2, r3, lsl #12
  89:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1140              		.loc 1 89 0
 1141 00f2 030D     		lsrs	r3, r0, #20
 1142 00f4 43EA0133 		orr	r3, r3, r1, lsl #12
  87:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1143              		.loc 1 87 0
 1144 00f8 A262     		str	r2, [r4, #40]
  89:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1145              		.loc 1 89 0
 1146 00fa 2363     		str	r3, [r4, #48]
  90:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1147              		.loc 1 90 0
 1148 00fc 88FB0523 		smull	r2, r3, r8, r5
 1149 0100 120D     		lsrs	r2, r2, #20
 1150 0102 42EA0332 		orr	r2, r2, r3, lsl #12
  88:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1151              		.loc 1 88 0
 1152 0106 C4F82C80 		str	r8, [r4, #44]
  90:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1153              		.loc 1 90 0
 1154 010a 6263     		str	r2, [r4, #52]
  91:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1155              		.loc 1 91 0
 1156 010c C4F83890 		str	r9, [r4, #56]
  93:math/pprz_geodetic_int.c **** }
 1157              		.loc 1 93 0
 1158 0110 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1159              	.L24:
 1160              		.align	2
 1161              	.L23:
 1162 0114 8096184B 		.word	1259902592
 1163              		.cfi_endproc
 1164              	.LFE1:
 1166              		.text
 1167              	.Letext0:
 1168              		.file 2 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 1169              		.file 3 "math/pprz_algebra_int.h"
 1170              		.file 4 "math/pprz_geodetic_int.h"
 1171              		.file 5 "math/pprz_geodetic_double.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pprz_geodetic_int.c
     /tmp/ccVOEWNs.s:18     .text.enu_of_ecef_point_i:00000000 $t
     /tmp/ccVOEWNs.s:23     .text.enu_of_ecef_point_i:00000000 enu_of_ecef_point_i
     /tmp/ccVOEWNs.s:111    .text.ned_of_ecef_point_i:00000000 $t
     /tmp/ccVOEWNs.s:116    .text.ned_of_ecef_point_i:00000000 ned_of_ecef_point_i
     /tmp/ccVOEWNs.s:153    .text.enu_of_ecef_vect_i:00000000 $t
     /tmp/ccVOEWNs.s:158    .text.enu_of_ecef_vect_i:00000000 enu_of_ecef_vect_i
     /tmp/ccVOEWNs.s:236    .text.ned_of_ecef_vect_i:00000000 $t
     /tmp/ccVOEWNs.s:241    .text.ned_of_ecef_vect_i:00000000 ned_of_ecef_vect_i
     /tmp/ccVOEWNs.s:278    .text.ecef_of_enu_point_i:00000000 $t
     /tmp/ccVOEWNs.s:283    .text.ecef_of_enu_point_i:00000000 ecef_of_enu_point_i
     /tmp/ccVOEWNs.s:346    .text.ecef_of_ned_point_i:00000000 $t
     /tmp/ccVOEWNs.s:351    .text.ecef_of_ned_point_i:00000000 ecef_of_ned_point_i
     /tmp/ccVOEWNs.s:389    .text.ecef_of_enu_vect_i:00000000 $t
     /tmp/ccVOEWNs.s:394    .text.ecef_of_enu_vect_i:00000000 ecef_of_enu_vect_i
     /tmp/ccVOEWNs.s:444    .text.ecef_of_ned_vect_i:00000000 $t
     /tmp/ccVOEWNs.s:449    .text.ecef_of_ned_vect_i:00000000 ecef_of_ned_vect_i
     /tmp/ccVOEWNs.s:491    .text.lla_of_ecef_i:00000000 $t
     /tmp/ccVOEWNs.s:496    .text.lla_of_ecef_i:00000000 lla_of_ecef_i
     /tmp/ccVOEWNs.s:576    .text.lla_of_ecef_i:00000090 $d
     /tmp/ccVOEWNs.s:588    .text.ltp_def_from_ecef_i:00000000 $t
     /tmp/ccVOEWNs.s:593    .text.ltp_def_from_ecef_i:00000000 ltp_def_from_ecef_i
     /tmp/ccVOEWNs.s:742    .text.ltp_def_from_ecef_i:00000118 $d
     /tmp/ccVOEWNs.s:747    .text.ecef_of_lla_i:00000000 $t
     /tmp/ccVOEWNs.s:752    .text.ecef_of_lla_i:00000000 ecef_of_lla_i
     /tmp/ccVOEWNs.s:830    .text.ecef_of_lla_i:00000088 $d
     /tmp/ccVOEWNs.s:838    .text.ned_of_lla_vect_i:00000000 $t
     /tmp/ccVOEWNs.s:843    .text.ned_of_lla_vect_i:00000000 ned_of_lla_vect_i
     /tmp/ccVOEWNs.s:881    .text.enu_of_lla_vect_i:00000000 $t
     /tmp/ccVOEWNs.s:886    .text.enu_of_lla_vect_i:00000000 enu_of_lla_vect_i
     /tmp/ccVOEWNs.s:924    .text.ned_of_lla_point_i:00000000 $t
     /tmp/ccVOEWNs.s:929    .text.ned_of_lla_point_i:00000000 ned_of_lla_point_i
     /tmp/ccVOEWNs.s:967    .text.enu_of_lla_point_i:00000000 $t
     /tmp/ccVOEWNs.s:972    .text.enu_of_lla_point_i:00000000 enu_of_lla_point_i
     /tmp/ccVOEWNs.s:1010   .text.ltp_def_from_lla_i:00000000 $t
     /tmp/ccVOEWNs.s:1015   .text.ltp_def_from_lla_i:00000000 ltp_def_from_lla_i
     /tmp/ccVOEWNs.s:1162   .text.ltp_def_from_lla_i:00000114 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2iz
lla_of_ecef_d
rint
__aeabi_i2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_f2d
sinf
cosf
ecef_of_lla_d
