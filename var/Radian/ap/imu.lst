   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"imu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.imu_init,"ax",%progbits
  18              		.align	1
  19              		.global	imu_init
  20              		.thumb
  21              		.thumb_func
  23              	imu_init:
  24              	.LFB28:
  25              		.file 1 "subsystems/imu.c"
   1:subsystems/imu.c **** /*
   2:subsystems/imu.c ****  * $Id$
   3:subsystems/imu.c ****  *
   4:subsystems/imu.c ****  * Copyright (C) 2008-2010 The Paparazzi Team
   5:subsystems/imu.c ****  *
   6:subsystems/imu.c ****  * This file is part of paparazzi.
   7:subsystems/imu.c ****  *
   8:subsystems/imu.c ****  * paparazzi is free software; you can redistribute it and/or modify
   9:subsystems/imu.c ****  * it under the terms of the GNU General Public License as published by
  10:subsystems/imu.c ****  * the Free Software Foundation; either version 2, or (at your option)
  11:subsystems/imu.c ****  * any later version.
  12:subsystems/imu.c ****  *
  13:subsystems/imu.c ****  * paparazzi is distributed in the hope that it will be useful,
  14:subsystems/imu.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:subsystems/imu.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:subsystems/imu.c ****  * GNU General Public License for more details.
  17:subsystems/imu.c ****  *
  18:subsystems/imu.c ****  * You should have received a copy of the GNU General Public License
  19:subsystems/imu.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  20:subsystems/imu.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  21:subsystems/imu.c ****  * Boston, MA 02111-1307, USA.
  22:subsystems/imu.c ****  */
  23:subsystems/imu.c **** 
  24:subsystems/imu.c **** /** @file imu.c
  25:subsystems/imu.c ****  * Inertial Measurement Unit interface.
  26:subsystems/imu.c ****  */
  27:subsystems/imu.c **** 
  28:subsystems/imu.c **** #include "subsystems/imu.h"
  29:subsystems/imu.c **** 
  30:subsystems/imu.c **** struct Imu imu;
  31:subsystems/imu.c **** 
  32:subsystems/imu.c **** void imu_init(void) {
  26              		.loc 1 32 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  33:subsystems/imu.c **** 
  34:subsystems/imu.c ****   /* initialises neutrals */
  35:subsystems/imu.c ****   RATES_ASSIGN(imu.gyro_neutral,  IMU_GYRO_P_NEUTRAL,  IMU_GYRO_Q_NEUTRAL,  IMU_GYRO_R_NEUTRAL);
  30              		.loc 1 35 0
  31 0000 684B     		ldr	r3, .L7
  32 0002 0022     		movs	r2, #0
  32:subsystems/imu.c **** void imu_init(void) {
  33              		.loc 1 32 0
  34 0004 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 28
  37              		.cfi_offset 14, -4
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 7, -16
  41              		.cfi_offset 6, -20
  42              		.cfi_offset 5, -24
  43              		.cfi_offset 4, -28
  44              		.loc 1 35 0
  45 0008 DA63     		str	r2, [r3, #60]
  46 000a 1A64     		str	r2, [r3, #64]
  47 000c 6FF00602 		mvn	r2, #6
  48 0010 5A64     		str	r2, [r3, #68]
  36:subsystems/imu.c **** 
  37:subsystems/imu.c ****   VECT3_ASSIGN(imu.accel_neutral, IMU_ACCEL_X_NEUTRAL, IMU_ACCEL_Y_NEUTRAL, IMU_ACCEL_Z_NEUTRAL);
  49              		.loc 1 37 0
  50 0012 4122     		movs	r2, #65
  51 0014 9A64     		str	r2, [r3, #72]
  52 0016 1422     		movs	r2, #20
  53 0018 DA64     		str	r2, [r3, #76]
  54 001a 6FF04E02 		mvn	r2, #78
  55 001e 1A65     		str	r2, [r3, #80]
  38:subsystems/imu.c **** 
  39:subsystems/imu.c **** #if defined IMU_MAG_X_NEUTRAL && defined IMU_MAG_Y_NEUTRAL && defined IMU_MAG_Z_NEUTRAL
  40:subsystems/imu.c ****   VECT3_ASSIGN(imu.mag_neutral,   IMU_MAG_X_NEUTRAL,   IMU_MAG_Y_NEUTRAL,   IMU_MAG_Z_NEUTRAL);
  56              		.loc 1 40 0
  57 0020 6122     		movs	r2, #97
  58 0022 5A65     		str	r2, [r3, #84]
  59 0024 5522     		movs	r2, #85
  60 0026 9A65     		str	r2, [r3, #88]
  61 0028 6FF48772 		mvn	r2, #270
  62 002c DA65     		str	r2, [r3, #92]
  63              	.LVL0:
  64              	.LBB2:
  65              	.LBB3:
  41:subsystems/imu.c **** #else
  42:subsystems/imu.c **** #pragma message "Info: Magnetomter neutrals are set to zero!"
  43:subsystems/imu.c ****   INT_VECT3_ZERO(imu.mag_neutral);
  44:subsystems/imu.c **** #endif
  45:subsystems/imu.c **** 
  46:subsystems/imu.c ****   /*
  47:subsystems/imu.c ****     Compute quaternion and rotation matrix
  48:subsystems/imu.c ****     for conversions between body and imu frame
  49:subsystems/imu.c ****   */
  50:subsystems/imu.c ****   struct Int32Eulers body_to_imu_eulers =
  51:subsystems/imu.c ****     { ANGLE_BFP_OF_REAL(IMU_BODY_TO_IMU_PHI),
  52:subsystems/imu.c ****       ANGLE_BFP_OF_REAL(IMU_BODY_TO_IMU_THETA),
  53:subsystems/imu.c ****       ANGLE_BFP_OF_REAL(IMU_BODY_TO_IMU_PSI) };
  54:subsystems/imu.c ****   INT32_QUAT_OF_EULERS(imu.body_to_imu_quat, body_to_imu_eulers);
  66              		.loc 1 54 0
  67 002e 5E4B     		ldr	r3, .L7+4
  68 0030 03F54152 		add	r2, r3, #12352
  69 0034 B2F90E40 		ldrsh	r4, [r2, #14]
  70              	.LVL1:
  71              	.LBE3:
  72              	.LBB4:
  73 0038 B3F9F611 		ldrsh	r1, [r3, #502]
  74              	.LVL2:
  75              	.LBE4:
  76              	.LBB5:
  77 003c B3F90000 		ldrsh	r0, [r3, #0]
  78              	.LVL3:
  79              	.LBE5:
  80              	.LBB6:
  81 0040 03F54952 		add	r2, r3, #12864
  82              	.LBE6:
  83              	.LBB7:
  84 0044 03F5C953 		add	r3, r3, #6432
  85 0048 B3F90060 		ldrsh	r6, [r3, #0]
  86              	.LBE7:
  87              	.LBB8:
  88 004c B2F90220 		ldrsh	r2, [r2, #2]
  89              	.LVL4:
  90              	.LBE8:
  91              	.LBB9:
  92 0050 B3F90430 		ldrsh	r3, [r3, #4]
  93              	.LVL5:
  94              	.LBE9:
  95 0054 06FB02FC 		mul	ip, r6, r2
  96 0058 4643     		muls	r6, r0, r6
  97              	.LVL6:
  98 005a 03FB02F5 		mul	r5, r3, r2
  99 005e B613     		asrs	r6, r6, #14
 100 0060 AD13     		asrs	r5, r5, #14
 101              	.LVL7:
 102 0062 06FB04F7 		mul	r7, r6, r4
 103 0066 05FB01F8 		mul	r8, r5, r1
 104 006a 7F13     		asrs	r7, r7, #13
 105 006c 6543     		muls	r5, r4, r5
 106              	.LVL8:
 107 006e 07EB6837 		add	r7, r7, r8, asr #13
 108 0072 C1F10008 		rsb	r8, r1, #0
 109 0076 4343     		muls	r3, r0, r3
 110              	.LVL9:
 111 0078 06FB08F6 		mul	r6, r6, r8
 112 007c 4FEAAC3C 		asr	ip, ip, #14
 113              	.LVL10:
 114 0080 6D13     		asrs	r5, r5, #13
 115 0082 9B13     		asrs	r3, r3, #14
 116              	.LVL11:
 117 0084 05EB6636 		add	r6, r5, r6, asr #13
 118 0088 0CFB04F5 		mul	r5, ip, r4
 119 008c 6442     		negs	r4, r4
 120              	.LVL12:
 121 008e 03FB01F8 		mul	r8, r3, r1
 122 0092 6343     		muls	r3, r4, r3
 123              	.LVL13:
 124 0094 0CFB01F1 		mul	r1, ip, r1
 125              	.LVL14:
 126 0098 6D13     		asrs	r5, r5, #13
 127 009a 5B13     		asrs	r3, r3, #13
 128 009c 05EB6835 		add	r5, r5, r8, asr #13
 129 00a0 03EB6134 		add	r4, r3, r1, asr #13
 130              	.LVL15:
 131              	.LBE2:
 132              	.LBB10:
 133              	.LBB11:
  55:subsystems/imu.c ****   INT32_QUAT_NORMALIZE(imu.body_to_imu_quat);
 134              		.loc 1 55 0
 135 00a4 06FB06FC 		mul	ip, r6, r6
 136              	.LVL16:
 137 00a8 05FB05F3 		mul	r3, r5, r5
 138 00ac 07FB07CC 		mla	ip, r7, r7, ip
 139 00b0 04FB0433 		mla	r3, r4, r4, r3
 140              	.LVL17:
 141 00b4 1CEB030C 		adds	ip, ip, r3
 142              	.LVL18:
 143 00b8 13D0     		beq	.L5
 144              	.LVL19:
 145              	.LBB12:
 146              		.loc 1 55 0 is_stmt 0 discriminator 2
 147 00ba 6346     		mov	r3, ip
 148 00bc 4FF02808 		mov	r8, #40
 149 00c0 00E0     		b	.L4
 150              	.LVL20:
 151              	.L6:
 152              		.loc 1 55 0
 153 00c2 0B46     		mov	r3, r1
 154              	.LVL21:
 155              	.L4:
 156              		.loc 1 55 0 discriminator 3
 157 00c4 BCFBF3F1 		udiv	r1, ip, r3
 158              	.LVL22:
 159 00c8 C918     		adds	r1, r1, r3
 160              	.LVL23:
 161 00ca 4908     		lsrs	r1, r1, #1
 162              	.LVL24:
 163 00cc 5B1A     		subs	r3, r3, r1
 164              	.LVL25:
 165 00ce 012B     		cmp	r3, #1
 166 00d0 08D9     		bls	.L2
 167              		.loc 1 55 0 discriminator 4
 168 00d2 08F1FF38 		add	r8, r8, #-1
 169 00d6 5FFA88F8 		uxtb	r8, r8
 170 00da B8F1000F 		cmp	r8, #0
 171 00de F0D1     		bne	.L6
 172 00e0 00E0     		b	.L2
 173              	.LVL26:
 174              	.L5:
 175              	.LBE12:
 176              		.loc 1 55 0
 177 00e2 6146     		mov	r1, ip
 178              	.L2:
 179              	.LVL27:
 180              	.LBE11:
 181              		.loc 1 55 0 discriminator 6
 182 00e4 2F4B     		ldr	r3, .L7
 183 00e6 E403     		lsls	r4, r4, #15
 184 00e8 FF03     		lsls	r7, r7, #15
 185 00ea F603     		lsls	r6, r6, #15
 186 00ec ED03     		lsls	r5, r5, #15
 187 00ee 97FBF1F7 		sdiv	r7, r7, r1
 188 00f2 96FBF1F6 		sdiv	r6, r6, r1
 189 00f6 95FBF1F5 		sdiv	r5, r5, r1
 190 00fa 94FBF1F1 		sdiv	r1, r4, r1
 191              	.LVL28:
 192 00fe C3F89010 		str	r1, [r3, #144]
 193              	.LVL29:
 194              	.LBE10:
 195              	.LBB13:
 196              	.LBB14:
  56:subsystems/imu.c ****   INT32_RMAT_OF_EULERS(imu.body_to_imu_rmat, body_to_imu_eulers);
 197              		.loc 1 56 0 is_stmt 1 discriminator 6
 198 0102 2949     		ldr	r1, .L7+4
 199              	.LBE14:
 200              	.LBE13:
 201              	.LBB20:
  55:subsystems/imu.c ****   INT32_QUAT_NORMALIZE(imu.body_to_imu_quat);
 202              		.loc 1 55 0 discriminator 6
 203 0104 C3F88C50 		str	r5, [r3, #140]
 204              	.LBE20:
 205              	.LBB21:
 206              	.LBB15:
 207              		.loc 1 56 0 discriminator 6
 208 0108 B1F9E843 		ldrsh	r4, [r1, #1000]
 209              	.LVL30:
 210              	.LBE15:
 211              	.LBB16:
 212 010c 01F53955 		add	r5, r1, #11840
 213              	.LBE16:
 214 0110 00FB04F8 		mul	r8, r0, r4
 215              	.LBB17:
 216 0114 B5F91850 		ldrsh	r5, [r5, #24]
 217              	.LBE17:
 218              	.LBB18:
 219 0118 B1F90210 		ldrsh	r1, [r1, #2]
 220              	.LBE18:
 221              	.LBB19:
 222 011c 6D42     		negs	r5, r5
 223              	.LVL31:
 224              	.LBE19:
 225              	.LBE21:
 226              	.LBB22:
  55:subsystems/imu.c ****   INT32_QUAT_NORMALIZE(imu.body_to_imu_quat);
 227              		.loc 1 55 0 discriminator 6
 228 011e C3F88470 		str	r7, [r3, #132]
 229 0122 C3F88860 		str	r6, [r3, #136]
 230              	.LBE22:
 231              	.LBB23:
 232              		.loc 1 56 0 discriminator 6
 233 0126 00FB05F7 		mul	r7, r0, r5
 234 012a 02FB05F6 		mul	r6, r2, r5
 235 012e 4042     		negs	r0, r0
 236              	.LVL32:
 237 0130 4FEAA838 		asr	r8, r8, #14
 238 0134 C3F89C00 		str	r0, [r3, #156]
 239 0138 01FB08F0 		mul	r0, r1, r8
 240              	.LVL33:
 241 013c 01FB02F9 		mul	r9, r1, r2
 242 0140 B613     		asrs	r6, r6, #14
 243              	.LVL34:
 244 0142 BF13     		asrs	r7, r7, #14
 245              	.LVL35:
 246 0144 C6EBA030 		rsb	r0, r6, r0, asr #14
 247 0148 02FB04FC 		mul	ip, r2, r4
 248              	.LVL36:
 249 014c 4D43     		muls	r5, r1, r5
 250              	.LVL37:
 251 014e 4FEAA939 		asr	r9, r9, #14
 252 0152 C3F8A000 		str	r0, [r3, #160]
 253 0156 01FB07F0 		mul	r0, r1, r7
 254 015a 6143     		muls	r1, r4, r1
 255              	.LVL38:
 256 015c 02FB08F8 		mul	r8, r2, r8
 257 0160 C3F89490 		str	r9, [r3, #148]
 258 0164 02FB02F9 		mul	r9, r2, r2
 259              	.LVL39:
 260 0168 7A43     		muls	r2, r7, r2
 261              	.LVL40:
 262 016a 4FEAAC3C 		asr	ip, ip, #14
 263              	.LVL41:
 264 016e AD13     		asrs	r5, r5, #14
 265              	.LVL42:
 266 0170 8913     		asrs	r1, r1, #14
 267 0172 4FEAA939 		asr	r9, r9, #14
 268              	.LVL43:
 269 0176 05EBA835 		add	r5, r5, r8, asr #14
 270              	.LVL44:
 271 017a 0CEBA030 		add	r0, ip, r0, asr #14
 272 017e C1EBA232 		rsb	r2, r1, r2, asr #14
 273 0182 C3F89890 		str	r9, [r3, #152]
 274 0186 C3F8A450 		str	r5, [r3, #164]
 275 018a C3F8A8C0 		str	ip, [r3, #168]
 276 018e C3F8AC00 		str	r0, [r3, #172]
 277 0192 C3F8B020 		str	r2, [r3, #176]
 278 0196 C3F8B460 		str	r6, [r3, #180]
 279              	.LBE23:
  57:subsystems/imu.c **** 
  58:subsystems/imu.c ****   imu_impl_init();
  59:subsystems/imu.c **** }
 280              		.loc 1 59 0 discriminator 6
 281 019a BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
  58:subsystems/imu.c ****   imu_impl_init();
 282              		.loc 1 58 0 discriminator 6
 283 019e FFF7FEBF 		b	imu_impl_init
 284              	.LVL45:
 285              	.L8:
 286 01a2 00BF     		.align	2
 287              	.L7:
 288 01a4 00000000 		.word	.LANCHOR0
 289 01a8 00000000 		.word	pprz_trig_int
 290              		.cfi_endproc
 291              	.LFE28:
 293              		.section	.text.imu_float_init,"ax",%progbits
 294              		.align	1
 295              		.global	imu_float_init
 296              		.thumb
 297              		.thumb_func
 299              	imu_float_init:
 300              	.LFB29:
  60:subsystems/imu.c **** 
  61:subsystems/imu.c **** 
  62:subsystems/imu.c **** void imu_float_init(struct ImuFloat* imuf) {
 301              		.loc 1 62 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306              	.LVL46:
  63:subsystems/imu.c **** 
  64:subsystems/imu.c ****   /*
  65:subsystems/imu.c ****     Compute quaternion and rotation matrix
  66:subsystems/imu.c ****     for conversions between body and imu frame
  67:subsystems/imu.c ****   */
  68:subsystems/imu.c ****   EULERS_ASSIGN(imuf->body_to_imu_eulers,
 307              		.loc 1 68 0
 308 0000 0F4B     		ldr	r3, .L10
 309              	.LBB24:
  69:subsystems/imu.c **** 		IMU_BODY_TO_IMU_PHI, IMU_BODY_TO_IMU_THETA, IMU_BODY_TO_IMU_PSI);
  70:subsystems/imu.c ****   FLOAT_QUAT_OF_EULERS(imuf->body_to_imu_quat, imuf->body_to_imu_eulers);
 310              		.loc 1 70 0
 311 0002 104A     		ldr	r2, .L10+4
 312              	.LBE24:
  68:subsystems/imu.c ****   EULERS_ASSIGN(imuf->body_to_imu_eulers,
 313              		.loc 1 68 0
 314 0004 0363     		str	r3, [r0, #48]	@ float
 315 0006 0023     		movs	r3, #0
 316 0008 4363     		str	r3, [r0, #52]	@ float
 317 000a 0F4B     		ldr	r3, .L10+8
 318              	.LBB25:
 319              		.loc 1 70 0
 320 000c 0264     		str	r2, [r0, #64]	@ float
 321              	.LBE25:
  68:subsystems/imu.c ****   EULERS_ASSIGN(imuf->body_to_imu_eulers,
 322              		.loc 1 68 0
 323 000e 8363     		str	r3, [r0, #56]	@ float
 324              	.LVL47:
 325              	.LBB26:
 326              		.loc 1 70 0
 327 0010 0E4B     		ldr	r3, .L10+12
 328 0012 4264     		str	r2, [r0, #68]	@ float
 329              	.LVL48:
 330 0014 C363     		str	r3, [r0, #60]	@ float
 331              	.LBE26:
 332              	.LBB27:
  71:subsystems/imu.c ****   FLOAT_QUAT_NORMALIZE(imuf->body_to_imu_quat);
 333              		.loc 1 71 0
 334 0016 8364     		str	r3, [r0, #72]	@ float
 335              	.LVL49:
 336              	.LBE27:
 337              	.LBB28:
  72:subsystems/imu.c ****   FLOAT_RMAT_OF_EULERS(imuf->body_to_imu_rmat, imuf->body_to_imu_eulers);
 338              		.loc 1 72 0
 339 0018 0D4B     		ldr	r3, .L10+16
 340 001a C364     		str	r3, [r0, #76]	@ float
 341 001c 4FF07E53 		mov	r3, #1065353216
 342 0020 0365     		str	r3, [r0, #80]	@ float
 343 0022 4FF00043 		mov	r3, #-2147483648
 344 0026 4365     		str	r3, [r0, #84]	@ float
 345 0028 0A4B     		ldr	r3, .L10+20
 346 002a 8365     		str	r3, [r0, #88]	@ float
 347 002c 0A4B     		ldr	r3, .L10+24
 348 002e C365     		str	r3, [r0, #92]	@ float
 349 0030 0A4B     		ldr	r3, .L10+28
 350 0032 0366     		str	r3, [r0, #96]	@ float
 351 0034 4366     		str	r3, [r0, #100]	@ float
 352 0036 0A4B     		ldr	r3, .L10+32
 353 0038 8366     		str	r3, [r0, #104]	@ float
 354 003a 0A4B     		ldr	r3, .L10+36
 355 003c C366     		str	r3, [r0, #108]	@ float
 356              	.LBE28:
  73:subsystems/imu.c **** 
  74:subsystems/imu.c **** }
 357              		.loc 1 74 0
 358 003e 7047     		bx	lr
 359              	.L11:
 360              		.align	2
 361              	.L10:
 362 0040 2C3E4140 		.word	1078017580
 363 0044 84AE343F 		.word	1060417156
 364 0048 DB0FC93F 		.word	1070141403
 365 004c BCD0303D 		.word	1026609340
 366 0050 2EBD3BB3 		.word	-1287930578
 367 0054 81177E3F 		.word	1065228161
 368 0058 F0563A33 		.word	859461360
 369 005c 9A96F93D 		.word	1039767194
 370 0060 7409B731 		.word	834079092
 371 0064 81177EBF 		.word	-1082255487
 372              		.cfi_endproc
 373              	.LFE29:
 375              		.global	imu
 376              		.section	.bss.imu,"aw",%nobits
 377              		.align	2
 378              		.set	.LANCHOR0,. + 0
 381              	imu:
 382 0000 00000000 		.space	184
 382      00000000 
 382      00000000 
 382      00000000 
 382      00000000 
 383              		.text
 384              	.Letext0:
 385              		.file 2 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 386              		.file 3 "./math/pprz_algebra_int.h"
 387              		.file 4 "./math/pprz_algebra_float.h"
 388              		.file 5 "./subsystems/imu.h"
 389              		.file 6 "./subsystems/imu/imu_aspirin2.h"
 390              		.file 7 "./math/pprz_trig_int.h"
DEFINED SYMBOLS
                            *ABS*:00000000 imu.c
     /tmp/ccgKmj5B.s:18     .text.imu_init:00000000 $t
     /tmp/ccgKmj5B.s:23     .text.imu_init:00000000 imu_init
     /tmp/ccgKmj5B.s:288    .text.imu_init:000001a4 $d
     /tmp/ccgKmj5B.s:294    .text.imu_float_init:00000000 $t
     /tmp/ccgKmj5B.s:299    .text.imu_float_init:00000000 imu_float_init
     /tmp/ccgKmj5B.s:362    .text.imu_float_init:00000040 $d
     /tmp/ccgKmj5B.s:381    .bss.imu:00000000 imu
     /tmp/ccgKmj5B.s:377    .bss.imu:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
imu_impl_init
pprz_trig_int
