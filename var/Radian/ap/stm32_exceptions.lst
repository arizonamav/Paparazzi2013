   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32_exceptions.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.nmi_exception,"ax",%progbits
  18              		.align	1
  19              		.global	nmi_exception
  20              		.thumb
  21              		.thumb_func
  23              	nmi_exception:
  24              	.LFB0:
  25              		.file 1 "arch/stm32/stm32_exceptions.c"
   1:arch/stm32/stm32_exceptions.c **** /*
   2:arch/stm32/stm32_exceptions.c ****  * $Id$
   3:arch/stm32/stm32_exceptions.c ****  *
   4:arch/stm32/stm32_exceptions.c ****  * Copyright (C) 2010 Antoine Drouin <poinix@gmail.com>
   5:arch/stm32/stm32_exceptions.c ****  *
   6:arch/stm32/stm32_exceptions.c ****  * This file is part of Paparazzi.
   7:arch/stm32/stm32_exceptions.c ****  *
   8:arch/stm32/stm32_exceptions.c ****  * Paparazzi is free software; you can redistribute it and/or modify
   9:arch/stm32/stm32_exceptions.c ****  * it under the terms of the GNU General Public License as published by
  10:arch/stm32/stm32_exceptions.c ****  * the Free Software Foundation; either version 2, or (at your option)
  11:arch/stm32/stm32_exceptions.c ****  * any later version.
  12:arch/stm32/stm32_exceptions.c ****  *
  13:arch/stm32/stm32_exceptions.c ****  * Paparazzi is distributed in the hope that it will be useful,
  14:arch/stm32/stm32_exceptions.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:arch/stm32/stm32_exceptions.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:arch/stm32/stm32_exceptions.c ****  * GNU General Public License for more details.
  17:arch/stm32/stm32_exceptions.c ****  *
  18:arch/stm32/stm32_exceptions.c ****  * You should have received a copy of the GNU General Public License
  19:arch/stm32/stm32_exceptions.c ****  * along with Paparazzi; see the file COPYING.  If not, write to
  20:arch/stm32/stm32_exceptions.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  21:arch/stm32/stm32_exceptions.c ****  * Boston, MA 02111-1307, USA.
  22:arch/stm32/stm32_exceptions.c ****  */
  23:arch/stm32/stm32_exceptions.c **** 
  24:arch/stm32/stm32_exceptions.c **** #include "stm32_exceptions.h"
  25:arch/stm32/stm32_exceptions.c **** 
  26:arch/stm32/stm32_exceptions.c **** void nmi_exception(void){
  26              		.loc 1 26 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  27:arch/stm32/stm32_exceptions.c **** }
  31              		.loc 1 27 0
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE0:
  36              		.section	.text.hard_fault_exception,"ax",%progbits
  37              		.align	1
  38              		.global	hard_fault_exception
  39              		.thumb
  40              		.thumb_func
  42              	hard_fault_exception:
  43              	.LFB1:
  28:arch/stm32/stm32_exceptions.c **** 
  29:arch/stm32/stm32_exceptions.c **** void hard_fault_exception(void){
  44              		.loc 1 29 0
  45              		.cfi_startproc
  46              		@ Volatile: function does not return.
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50              	.L3:
  51 0000 FEE7     		b	.L3
  52              		.cfi_endproc
  53              	.LFE1:
  55              		.section	.text.mem_manage_exception,"ax",%progbits
  56              		.align	1
  57              		.global	mem_manage_exception
  58              		.thumb
  59              		.thumb_func
  61              	mem_manage_exception:
  62              	.LFB2:
  30:arch/stm32/stm32_exceptions.c ****     while(1);
  31:arch/stm32/stm32_exceptions.c **** }
  32:arch/stm32/stm32_exceptions.c **** 
  33:arch/stm32/stm32_exceptions.c **** void mem_manage_exception(void){
  63              		.loc 1 33 0
  64              		.cfi_startproc
  65              		@ Volatile: function does not return.
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.L5:
  70 0000 FEE7     		b	.L5
  71              		.cfi_endproc
  72              	.LFE2:
  74              		.section	.text.bus_fault_exception,"ax",%progbits
  75              		.align	1
  76              		.global	bus_fault_exception
  77              		.thumb
  78              		.thumb_func
  80              	bus_fault_exception:
  81              	.LFB3:
  34:arch/stm32/stm32_exceptions.c ****     while(1);
  35:arch/stm32/stm32_exceptions.c **** }
  36:arch/stm32/stm32_exceptions.c **** 
  37:arch/stm32/stm32_exceptions.c **** void bus_fault_exception(void){
  82              		.loc 1 37 0
  83              		.cfi_startproc
  84              		@ Volatile: function does not return.
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.L7:
  89 0000 FEE7     		b	.L7
  90              		.cfi_endproc
  91              	.LFE3:
  93              		.section	.text.usage_fault_exception,"ax",%progbits
  94              		.align	1
  95              		.global	usage_fault_exception
  96              		.thumb
  97              		.thumb_func
  99              	usage_fault_exception:
 100              	.LFB4:
  38:arch/stm32/stm32_exceptions.c ****     while(1);
  39:arch/stm32/stm32_exceptions.c **** }
  40:arch/stm32/stm32_exceptions.c **** 
  41:arch/stm32/stm32_exceptions.c **** void usage_fault_exception(void){
 101              		.loc 1 41 0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L9:
 108 0000 FEE7     		b	.L9
 109              		.cfi_endproc
 110              	.LFE4:
 112              		.text
 113              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32_exceptions.c
     /tmp/cc7h30w5.s:18     .text.nmi_exception:00000000 $t
     /tmp/cc7h30w5.s:23     .text.nmi_exception:00000000 nmi_exception
     /tmp/cc7h30w5.s:37     .text.hard_fault_exception:00000000 $t
     /tmp/cc7h30w5.s:42     .text.hard_fault_exception:00000000 hard_fault_exception
     /tmp/cc7h30w5.s:56     .text.mem_manage_exception:00000000 $t
     /tmp/cc7h30w5.s:61     .text.mem_manage_exception:00000000 mem_manage_exception
     /tmp/cc7h30w5.s:75     .text.bus_fault_exception:00000000 $t
     /tmp/cc7h30w5.s:80     .text.bus_fault_exception:00000000 bus_fault_exception
     /tmp/cc7h30w5.s:94     .text.usage_fault_exception:00000000 $t
     /tmp/cc7h30w5.s:99     .text.usage_fault_exception:00000000 usage_fault_exception
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
